name: CI/CD

# Controls when the workflow will run
on:
  push:
    tags: '*'
  pull_request:
    branches: '**'

env:
  CONTAINER_REGISTRY: ghcr.io

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Compile and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate code
        run: npm run generate

      - name: Compile
        run: npm run compile

      - name: Lint code
        run: npm run lint

      - name: Execute tests
        run: npm test

  build-and-push-container:
    name: Build container image
    needs: build
    runs-on: ubuntu-latest
    env:
      image_tag: ${{ github.repository }}:${{ github.sha }}

    steps:
      - uses: actions/checkout@v3

      - name: Build container image
        uses: docker/build-push-action@v3
        with:
          tags: ${{ env.image_tag }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.7.1
        with:
          image-ref: ${{ env.image_tag }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          security-checks: 'vuln,secret,config'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Login to GitHub Package
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}

      - name: Build and push container image with tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build and push container image with commit SHA
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.CONTAINER_REGISTRY }}/${{ env.image_tag }}

  pn-e2e-tests:
    name: PN E2E Tests
    needs: build-and-push-container
    runs-on: ubuntu-latest

    container:
      image: node:18.13.0-bullseye-slim

    env:
      EMULATOR_HOSTNAME: pn-emulator
      EMULATOR_PORT: 3000
      EMULATOR_API_KEY: key-value
      WORKFLOW_WAIT_MILLIS: 100
      WAIT_MILLIS: 200

    # Execute the emulator in a container. Execute the emulator created starting from the current commit.
    services:
      pn-emulator:
        image: ghcr.io/pagopa/pn-local-emulator:${{ github.sha }}
        env:
          HOSTNAME: ${{ env.EMULATOR_HOSTNAME }}
        ports:
          - 3000:3000

    steps:
      - name: Clone PN Client
        uses: actions/checkout@v3
        with:
          repository: 'pagopa/pn-b2b-client'
          # This is the SHA of the commit where it is possible to pass a value for the Thread.sleep() method
          ref: '3a5e63e64630240d6f63ae52d6aca6b310f7b19a'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'

      - name: Run TC-SEND-01
        run: |
          ./mvnw -Dtest=it.pagopa.pn.cucumber.Cucumber_Tc_Invio_01 verify -Dpn.external.base-url=http://${{ env.EMULATOR_HOSTNAME }}:${{ env.EMULATOR_PORT }} -Dpn.external.api-key=${{ env.EMULATOR_API_KEY }} -Dpn.configuration.workflow.wait.millis=${{ env.WORKFLOW_WAIT_MILLIS }} -Dpn.configuration.wait.millis=${{ env.WAIT_MILLIS }}

      - name: Run TC-SEND-02
        run: |
          ./mvnw -Dtest=it.pagopa.pn.cucumber.Cucumber_Tc_Invio_02 verify -Dpn.external.base-url=http://${{ env.EMULATOR_HOSTNAME }}:${{ env.EMULATOR_PORT }} -Dpn.external.api-key=${{ env.EMULATOR_API_KEY }} -Dpn.configuration.workflow.wait.millis=${{ env.WORKFLOW_WAIT_MILLIS }} -Dpn.configuration.wait.millis=${{ env.WAIT_MILLIS }}

      - name: Run TC-SEND-03
        run: |
          ./mvnw -Dtest=it.pagopa.pn.cucumber.Cucumber_Tc_Invio_03 verify -Dpn.external.base-url=http://${{ env.EMULATOR_HOSTNAME }}:${{ env.EMULATOR_PORT }} -Dpn.external.api-key=${{ env.EMULATOR_API_KEY }} -Dpn.configuration.workflow.wait.millis=${{ env.WORKFLOW_WAIT_MILLIS }} -Dpn.configuration.wait.millis=${{ env.WAIT_MILLIS }}

      - name: Run TC-PAYMENT-01
        run: |
          ./mvnw -Dtest=it.pagopa.pn.cucumber.Cucumber_Tc_Pagamento_01 verify -Dpn.external.base-url=http://${{ env.EMULATOR_HOSTNAME }}:${{ env.EMULATOR_PORT }} -Dpn.external.api-key=${{ env.EMULATOR_API_KEY }} -Dpn.configuration.workflow.wait.millis=${{ env.WORKFLOW_WAIT_MILLIS }} -Dpn.configuration.wait.millis=${{ env.WAIT_MILLIS }}
