openapi: 3.0.3
info:
  title: "Piattaforma Notifiche: API B2B per le Pubbliche Amministrazioni"
  description: "\n## Abstract\n  API utilizzate dalle pubbliche amministrazioni per\
    \ __inviare richieste di notifiche__ e \n  __ottenere informazioni in modalit√†\
    \ pull__ sullo stato della \n  _\"richiesta di notifica\"_ (accettata o rifiutata)\
    \ e, in caso di richiesta accettata, \n  sulle comunicazioni effettuate, o solo\
    \ tentate, nei confronti dei destinatari della notifica.\n\n## Operazioni utilizzate,\
    \ in sequenza temporale\n<table>\n<tr>\n<td>\n\n >>>>> <svg version=\"1.1\" xmlns=\"\
    http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"\
    515\" height=\"790\"><desc>title%20Invio%20notifica%0Aparticipant%20PA%0Aparticipant%20PN%0Aparticipant%20PN%20Safe-Storage%0APA-%3EPN%3ApresignedUploadRequest%20(1.a)%0APN-%3EPA%3Apresigned%20urls%20%5B%20%5D%20(1.a)%0Aspace%0Aspace%0Aloop%20upload%0APA-%3EPN%20Safe-Storage%3AattachmentUpload%20(1.b)%0APN%20Safe-Storage-%3EPA%3Aresult%20(1.b)%0Aend%0Aspace%0Aspace%0Aspace%0APA-%3EPN%3AsendNewNotification%20(2)%0APN-%3EPA%3AreqId%20(2)%0Aspace%0Aspace%0A</desc><defs/><g><g/><g/><g/><g/><g/><g/><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"0\" y=\"0\" width=\"515\" height=\"790\"\
    /></g><g><text fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"\
    16.5pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\"\
    \ x=\"196.56147636988732\" y=\"24.50280495\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">Invio\_notifica</text></g><g/><g><path fill=\"\
    none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 73.50841485\
    \ 95.887643371 L 73.50841485 790.133783621\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"12.565541,5.445067766666667\"/><path fill=\"\
    none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 316.7324396493489\
    \ 95.887643371 L 316.7324396493489 790.133783621\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"12.565541,5.445067766666667\"/><path fill=\"\
    none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 434.10914269189186\
    \ 95.887643371 L 434.10914269189186 790.133783621\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"12.565541,5.445067766666667\"/></g><g><path\
    \ fill=\"none\" stroke=\"none\"/><g><path fill=\"white\" stroke=\"black\" paint-order=\"\
    fill stroke markers\" d=\" M 46.550649445281245 51.782594461 L 100.46618025471875\
    \ 51.782594461 L 100.46618025471875 95.887643371 L 46.550649445281245 95.887643371\
    \ L 46.550649445281245 51.782594461 Z\" stroke-miterlimit=\"10\" stroke-width=\"\
    2.613632528\" stroke-dasharray=\"\"/></g><g><g/><text fill=\"black\" stroke=\"\
    none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"normal\" font-weight=\"\
    normal\" text-decoration=\"normal\" x=\"64.27434502578124\" y=\"79.55244007099999\"\
    \ text-anchor=\"start\" dominant-baseline=\"alphabetic\" xml:space=\"preserve\"\
    >PA</text></g><path fill=\"none\" stroke=\"none\"/><g><path fill=\"white\" stroke=\"\
    black\" paint-order=\"fill stroke markers\" d=\" M 288.82621080468874 51.782594461\
    \ L 344.63866849400904 51.782594461 L 344.63866849400904 95.887643371 L 288.82621080468874\
    \ 95.887643371 L 288.82621080468874 51.782594461 Z\" stroke-miterlimit=\"10\"\
    \ stroke-width=\"2.613632528\" stroke-dasharray=\"\"/></g><g><g/><text fill=\"\
    black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"306.54990638518876\"\
    \ y=\"79.55244007099999\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">PN</text></g><path fill=\"none\" stroke=\"none\"/><g><path\
    \ fill=\"white\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 360.973871794009\
    \ 51.782594461 L 507.2444135897747 51.782594461 L 507.2444135897747 95.887643371\
    \ L 360.973871794009 95.887643371 L 360.973871794009 51.782594461 Z\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.613632528\" stroke-dasharray=\"\"/></g><g><g/><text fill=\"\
    black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"378.69756737450905\"\
    \ y=\"79.55244007099999\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">PN\_Safe-Storage</text></g></g><g><g><g><rect fill=\"\
    white\" stroke=\"none\" x=\"92.83840542166662\" y=\"128.558049971\" width=\"204.56404365601563\"\
    \ height=\"21.23576429\"/></g><text fill=\"black\" stroke=\"none\" font-family=\"\
    sans-serif\" font-size=\"11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"\
    normal\" x=\"95.28868591666662\" y=\"143.259732941\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">presignedUploadRequest\_(1.a)</text></g><g><path\
    \ fill=\"none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 73.50841485\
    \ 149.793814261 L 303.28312226568227 149.793814261\" stroke-miterlimit=\"10\"\
    \ stroke-width=\"1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(316.7324396493489,149.793814261)\
    \ translate(-316.7324396493489,-149.793814261)\"><path fill=\"black\" stroke=\"\
    none\" paint-order=\"stroke fill markers\" d=\" M 303.11977023268224 142.98747955266666\
    \ L 316.7324396493489 149.793814261 L 303.11977023268224 156.60014896933333 Z\"\
    /></g></g><g><g><rect fill=\"white\" stroke=\"none\" x=\"121.37455349295568\"\
    \ y=\"174.296619211\" width=\"147.4917475134375\" height=\"21.23576429\"/></g><text\
    \ fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\"\
    \ font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"\
    123.82483398795569\" y=\"188.99830218099999\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">presigned\_urls\_[\_]\_(1.a)</text></g><g><path\
    \ fill=\"none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 316.7324396493489\
    \ 195.532383501 L 86.95773223366666 195.532383501\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(73.50841485,195.532383501)\
    \ translate(-73.50841485,-195.532383501)\"><path fill=\"black\" stroke=\"none\"\
    \ paint-order=\"stroke fill markers\" d=\" M 87.12108426666666 188.72604879266666\
    \ L 73.50841485 195.532383501 L 87.12108426666666 202.33871820933334 Z\"/></g></g><g><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"174.75866764850454\" y=\"345.81625386099995\"\
    \ width=\"158.10022224488281\" height=\"21.23576429\"/></g><text fill=\"black\"\
    \ stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"177.20894814350453\"\
    \ y=\"360.51793683099993\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">attachmentUpload\_(1.b)</text></g><g><path fill=\"none\"\
    \ stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 73.50841485 367.05201815099997\
    \ L 420.6598253082252 367.05201815099997\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(434.10914269189186,367.05201815099997)\
    \ translate(-434.10914269189186,-367.05201815099997)\"><path fill=\"black\" stroke=\"\
    none\" paint-order=\"stroke fill markers\" d=\" M 420.4964732752252 360.24568344266663\
    \ L 434.10914269189186 367.05201815099997 L 420.4964732752252 373.8583528593333\
    \ Z\"/></g></g><g><g><rect fill=\"white\" stroke=\"none\" x=\"216.3263098604186\"\
    \ y=\"391.55482310099995\" width=\"74.96493782105469\" height=\"21.23576429\"\
    /></g><text fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"\
    11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\"\
    \ x=\"218.7765903554186\" y=\"406.25650607099993\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">result\_(1.b)</text></g><g><path fill=\"none\"\
    \ stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 434.10914269189186\
    \ 412.790587391 L 86.95773223366666 412.790587391\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(73.50841485,412.790587391)\
    \ translate(-73.50841485,-412.790587391)\"><path fill=\"black\" stroke=\"none\"\
    \ paint-order=\"stroke fill markers\" d=\" M 87.12108426666666 405.98425268266664\
    \ L 73.50841485 412.790587391 L 87.12108426666666 419.5969220993333 Z\"/></g></g><g><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"114.85700588553381\" y=\"584.310222041\"\
    \ width=\"160.52684272828125\" height=\"21.23576429\"/></g><text fill=\"black\"\
    \ stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"117.30728638053381\"\
    \ y=\"599.011905011\" text-anchor=\"start\" dominant-baseline=\"alphabetic\" xml:space=\"\
    preserve\">sendNewNotification\_(2)</text></g><g><path fill=\"none\" stroke=\"\
    black\" paint-order=\"fill stroke markers\" d=\" M 73.50841485 605.545986331 L\
    \ 303.28312226568227 605.545986331\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(316.7324396493489,605.545986331)\
    \ translate(-316.7324396493489,-605.545986331)\"><path fill=\"black\" stroke=\"\
    none\" paint-order=\"stroke fill markers\" d=\" M 303.11977023268224 598.7396516226667\
    \ L 316.7324396493489 605.545986331 L 303.11977023268224 612.3523210393333 Z\"\
    /></g></g><g><g><rect fill=\"white\" stroke=\"none\" x=\"164.96794491141273\"\
    \ y=\"630.0487912809999\" width=\"60.30496467652344\" height=\"21.23576429\"/></g><text\
    \ fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\"\
    \ font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"\
    167.41822540641272\" y=\"644.7504742509999\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">reqId\_(2)</text></g><g><path fill=\"none\"\
    \ stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 316.7324396493489\
    \ 651.2845555709999 L 86.95773223366666 651.2845555709999\" stroke-miterlimit=\"\
    10\" stroke-width=\"1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"\
    translate(73.50841485,651.2845555709999) translate(-73.50841485,-651.2845555709999)\"\
    ><path fill=\"black\" stroke=\"none\" paint-order=\"stroke fill markers\" d=\"\
    \ M 87.12108426666666 644.4782208626666 L 73.50841485 651.2845555709999 L 87.12108426666666\
    \ 658.0908902793333 Z\"/></g></g><g><g/><path fill=\"none\" stroke=\"black\" paint-order=\"\
    fill stroke markers\" d=\" M 16.335203299999996 301.71120495099996 L 491.2823542418919\
    \ 301.71120495099996 L 491.2823542418919 437.29339234099996 L 16.335203299999996\
    \ 437.29339234099996 L 16.335203299999996 301.71120495099996 Z\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.3336004714285714\" stroke-dasharray=\"\"/><path fill=\"\
    white\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 16.335203299999996\
    \ 301.71120495099996 L 16.335203299999996 321.31344891099997 L 73.76000443125\
    \ 321.31344891099997 L 83.56112641125 311.51232693099996 L 83.56112641125 301.71120495099996\
    \ L 16.335203299999996 301.71120495099996\" stroke-miterlimit=\"10\" stroke-width=\"\
    2.3336004714285714\" stroke-dasharray=\"\"/><text fill=\"black\" stroke=\"none\"\
    \ font-family=\"sans-serif\" font-size=\"8.8pt\" font-style=\"normal\" font-weight=\"\
    bold\" text-decoration=\"normal\" x=\"32.67040659999999\" y=\"314.779367591\"\
    \ text-anchor=\"start\" dominant-baseline=\"alphabetic\" xml:space=\"preserve\"\
    >loop</text><g><rect fill=\"white\" stroke=\"none\" x=\"97.44604921625\" y=\"\
    303.018021215\" width=\"51.15611518921875\" height=\"16.988611432000003\"/></g><text\
    \ fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"8.8pt\"\
    \ font-style=\"normal\" font-weight=\"bold\" text-decoration=\"normal\" x=\"99.89632971125\"\
    \ y=\"314.779367591\" text-anchor=\"start\" dominant-baseline=\"alphabetic\" xml:space=\"\
    preserve\">[upload]</text></g></g><g/><g/><g/></g></svg>   \n  \n  </br>\n  </br>\n\
    \  </br>\n  \n  #### 3. Verifica accettazione richiesta di invio notifica\n\n\
    \  Per questa verifica possono essere utilizzate due modalit√†:\n  \n  1. __richiesta\
    \ puntale__: consigliato solo ai fini di test\n  2. __lettura da stream configurato__:\
    \ consigliato per ambienti di produzione\n  \n  La differenza tra le due modalit√†\
    \ √® nell'interazione e nell'efficienza.\n  \n  Con la modalit√† _\"richiesta puntuale\"\
    _ √® necessario l'invocazione per ogni notifica,\n  mentre con la modalit√† _\"\
    stream\"_ √® possibile avere gli aggiornamenti\n  di stato di pi√π notifiche con\
    \ una sola invocazione.\n  \n  #### 3.1 Richiesta puntuale di verifica accettazione\n\
    \n  Questa modalit√† √® resa disponibile solo ai fini di test o di eventuali operazioni\n\
    \  di allineamento poich√© richiede l'invio di una richiesta per ogni notifica.\n\
    \  Se il passo (2) avviene con successo si utilizza l'operazione \n  [getNotificationRequestStatus](#/SenderReadB2B/getNotificationRequestStatus)\n\
    \  per ottenere informazioni riguardo allo stato della \"richiesta di invio di\
    \ notifica\". </br>\n  Nel campo _notificationRequestStatus_ sar√† indicato:</br>\n\
    \  >\\- <strong>WAITING:</strong> se la validazione √® ancora in corso.</br>\n\
    \  \\- <strong>ACCEPTED:</strong> se richiesta di notifica accettata, lo _IUN_\
    \ √® valorizzato.</br>\n  \\- <strong>REFUSED:</strong> se richiesta di notifica\
    \ rifiutata, √® valorizzato il campo _errors_.</br>\n  </br>\n  </br>\n  </br>\n\
    \n  #### 3.2 Richiesta avanzamento via \"stream\" di verifica di accettazione\n\
    \n  Questa modalit√† √® consigliata. Per essere fruita √® necessaria un'operazione\
    \ preliminare \n  tramite la chiamata alla API [createEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook-v1.yaml#/Streams/createEventStream)\n\
    \  per configurare uno \"stream\" che registri il cambio di stato della notifica\
    \ con il seguente payload:</br></br>``\n  {\n    \"title\": \"NotificationAccepted\"\
    ,\n    \"eventType\": \"STATUS\",\n    \"filterValues\": [\n      \"ACCEPTED\"\
    \n    ]\n  }\n  ``</br></br>\n  Successivamente si possono ottenere i dati richiamando\
    \ la API [consumeEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook-v1.yaml#/Events/consumeEventStream)\n\
    \  \n  \n  __NOTA__ saranno disponibili i dati di cambiamento di stato occorsi\
    \ solo successivamente alla configurazione\n  dello stream.\n  \n  </br>\n  </br>\n\
    \  </br>\n  </br>\n  \n</td>\n<td>\n\n  ### Ciclo di vita della notifica lato\
    \ mittente\n  \n  #### 1. Caricamento dei documenti della notifica\n  \n  Prima\
    \ di invocare la richiesta di notifica √® necessario caricare i documenti della\
    \ notifica (documenti e bollettini di pagamento).\n  \n  #### 1.a. Richiesta presigned\
    \ Url\n  \n  Invocare l'operazione [presignedUploadRequest](#/NewNotification/presignedUploadRequest)\
    \ \n  con cui prenotare il caricamento. Possono essere effettuate un massimo di\
    \ <span id=\"numberOfPresignedRequest\">15</span> prenotazioni di caricamento\n\
    \  per ogni richiesta.</br>\n  In risposta si ottengono le seguenti informazioni:<br/>\n\
    \  \\- httpMethod <br/>\n  \\- secret <br/>\n  \\- url <br/>\n  L'url restituito\
    \ ha una validit√† di 1h.\n  \n  </br>\n\n  #### 1.b Upload documenti della notifica\n\
    \  \n  Per ogni documento utilizzare un richiesta HTTP con metodo _httpMethod_\
    \ (POST o PUT) \n  all'url indicato dal campo _url_. <br/>\n  In tale richiesta\
    \ vanno aggiunti i seguenti header: <br/>\n  \\- _content-type_: valorizzato come\
    \ il campo \"contentType\" della richiesta di cui al punto (1.a) <br/>\n  \\-\
    \ _x-amz-meta-secret_: valorizzato con il valore del campo \"secret\" della risposta\
    \ di cui al punto (1.a) <br/>\n  \\- _trailer_: valorizzato con ```x-amz-checksum-sha256```\
    \ <br/>\n  \\- _x-amz-checksum-sha256_: valorizzato con il checksum sha256, codificato\
    \ in base 64, del contenuto binario del file che verr√† caricato. (__N.B.__ questo\
    \ √® un trailer HTTP non un header).\n    Vedi [HTTP Trailer](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Trailer)\
    \ <br/>\n\n \n  </br>\n  </br>\n  </br>\n  \n  #### 2. Richiesta di invio della\
    \ notifica\n\n  Per effettuare una richiesta di invio notifica, invocare l'operazione\
    \ \n  [sendNewNotification](#/NewNotification/sendNewNotification) utilizzando\
    \ i riferimenti dei file \n  caricati ottenuti al punto (1.b).\n  \n  </br>\n\
    \  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n        \n>>><svg version=\"\
    1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\
    \ width=\"489\" height=\"731\"><desc>alt%20single%20request%20check%0Anote%20over%20PA%2CPN%3AOnly%20for%20test%20purpose%0Aspace%0Aspace%0Aloop%20check%0APA-%3EPN%3AgetNotificationRequestStatus(reqId)%20(3.1)%0APN%20-%3EPA%3AIUN%20(3.1)%0Aend%0Aspace%0Aelse%20Stream%20solution%0Anote%20over%20PA%2CPN%3ASee%20%3Clink%3Ahttps%3A%2F%2Fpetstore.swagger.io%2F%3Furl%3Dhttps%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook-v1.yaml%3EAPI%20B2B%20avanzamento%20notifiche%3C%2Flink%3E%0APA-%3EPN%3AgetEvents(Stream)%20(3.2)%0APN-%3EPA%3Aevents%20%5B%20%5D%20(3.2)%0Aend</desc><defs/><g><g/><g/><g/><g/><g/><g/><g/><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"0\" y=\"0\" width=\"489\" height=\"731\"\
    /></g><g/><g><path fill=\"none\" stroke=\"black\" paint-order=\"fill stroke markers\"\
    \ d=\" M 89.84361815 55.049635120999994 L 89.84361815 731.3270517409999\" stroke-miterlimit=\"\
    10\" stroke-width=\"1.3612669416666667\" stroke-dasharray=\"12.565541,5.445067766666667\"\
    /><path fill=\"none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\"\
    \ M 399.86073376966146 55.049635120999994 L 399.86073376966146 731.3270517409999\"\
    \ stroke-miterlimit=\"10\" stroke-width=\"1.3612669416666667\" stroke-dasharray=\"\
    12.565541,5.445067766666667\"/></g><g><path fill=\"none\" stroke=\"none\"/><g><path\
    \ fill=\"white\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 62.88585274528125\
    \ 10.944586211000003 L 116.80138355471874 10.944586211000003 L 116.80138355471874\
    \ 55.049635120999994 L 62.88585274528125 55.049635120999994 L 62.88585274528125\
    \ 10.944586211000003 Z\" stroke-miterlimit=\"10\" stroke-width=\"2.613632528\"\
    \ stroke-dasharray=\"\"/></g><g><g/><text fill=\"black\" stroke=\"none\" font-family=\"\
    sans-serif\" font-size=\"11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"\
    normal\" x=\"80.60954832578125\" y=\"38.71443182099999\" text-anchor=\"start\"\
    \ dominant-baseline=\"alphabetic\" xml:space=\"preserve\">PA</text></g><path fill=\"\
    none\" stroke=\"none\"/><g><path fill=\"white\" stroke=\"black\" paint-order=\"\
    fill stroke markers\" d=\" M 371.9545049250013 10.944586211000003 L 427.7669626143216\
    \ 10.944586211000003 L 427.7669626143216 55.049635120999994 L 371.9545049250013\
    \ 55.049635120999994 L 371.9545049250013 10.944586211000003 Z\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.613632528\" stroke-dasharray=\"\"/></g><g><g/><text fill=\"\
    black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"389.6782005055013\"\
    \ y=\"38.71443182099999\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">PN</text></g></g><g><path fill=\"white\" stroke=\"black\"\
    \ paint-order=\"fill stroke markers\" d=\" M 75.14193517999999 131.82509063099997\
    \ L 399.86073376966146 131.82509063099997 L 414.56241673966144 146.52677360099997\
    \ L 414.56241673966144 169.39605822099998 L 75.14193517999999 169.39605822099998\
    \ L 75.14193517999999 131.82509063099997 M 399.86073376966146 131.82509063099997\
    \ L 399.86073376966146 146.52677360099997 L 414.56241673966144 146.52677360099997\"\
    \ stroke-miterlimit=\"10\" stroke-width=\"1.3612669416666667\" stroke-dasharray=\"\
    \"/><g><text fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"\
    11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\"\
    \ x=\"176.813548335319\" y=\"154.69437525099994\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">Only\_for\_test\_purpose</text></g><g><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"109.17360872166667\" y=\"319.67992858099996\"\
    \ width=\"271.3571344763281\" height=\"21.23576429\"/></g><text fill=\"black\"\
    \ stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"111.62388921666667\"\
    \ y=\"334.38161155099993\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">getNotificationRequestStatus(reqId)\_(3.1)</text></g><g><path\
    \ fill=\"none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 89.84361815\
    \ 340.915692871 L 386.4114163859948 340.915692871\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(399.86073376966146,340.915692871)\
    \ translate(-399.86073376966146,-340.915692871)\"><path fill=\"black\" stroke=\"\
    none\" paint-order=\"stroke fill markers\" d=\" M 386.2480643529948 334.10935816266664\
    \ L 399.86073376966146 340.915692871 L 386.2480643529948 347.7220275793333 Z\"\
    /></g></g><g><g><rect fill=\"white\" stroke=\"none\" x=\"212.67033571141278\"\
    \ y=\"365.41849782099996\" width=\"64.36368049683594\" height=\"21.23576429\"\
    /></g><text fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"\
    11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\"\
    \ x=\"215.12061620641276\" y=\"380.12018079099994\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">IUN\_(3.1)</text></g><g><path fill=\"none\"\
    \ stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 399.86073376966146\
    \ 386.654262111 L 103.29293553366666 386.654262111\" stroke-miterlimit=\"10\"\
    \ stroke-width=\"1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(89.84361815,386.654262111)\
    \ translate(-89.84361815,-386.654262111)\"><path fill=\"black\" stroke=\"none\"\
    \ paint-order=\"stroke fill markers\" d=\" M 103.45628756666666 379.84792740266664\
    \ L 89.84361815 386.654262111 L 103.45628756666666 393.4605968193333 Z\"/></g></g><path\
    \ fill=\"white\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 75.14193517999999\
    \ 520.6029291709999 L 399.86073376966146 520.6029291709999 L 414.56241673966144\
    \ 535.3046121409999 L 414.56241673966144 558.1738967609999 L 75.14193517999999\
    \ 558.1738967609999 L 75.14193517999999 520.6029291709999 M 399.86073376966146\
    \ 520.6029291709999 L 399.86073376966146 535.3046121409999 L 414.56241673966144\
    \ 535.3046121409999\" stroke-miterlimit=\"10\" stroke-width=\"1.3612669416666667\"\
    \ stroke-dasharray=\"\"/><g><text fill=\"black\" stroke=\"none\" font-family=\"\
    sans-serif\" font-size=\"11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"\
    normal\" x=\"126.68471837926432\" y=\"543.472213791\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">See\_</text><a xlink:href=\"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/pagopa/pn-delivery-push/develop/docs/openapi/api-external-b2b-webhook-v1.yaml\"\
    ><text fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"\
    11pt\" font-style=\"normal\" font-weight=\"normal\" text-decoration=\"underline\"\
    \ x=\"156.84218908238932\" y=\"543.472213791\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">API\_B2B\_avanzamento\_notifiche</text></a></g><g><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"164.18790620701824\" y=\"582.6767017109999\"\
    \ width=\"161.328539505625\" height=\"21.23576429\"/></g><text fill=\"black\"\
    \ stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\" font-style=\"\
    normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"166.63818670201823\"\
    \ y=\"597.3783846809998\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">getEvents(Stream)\_(3.2)</text></g><g><path fill=\"none\"\
    \ stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 89.84361815 603.9124660009999\
    \ L 386.4114163859948 603.9124660009999\" stroke-miterlimit=\"10\" stroke-width=\"\
    1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"translate(399.86073376966146,603.9124660009999)\
    \ translate(-399.86073376966146,-603.9124660009999)\"><path fill=\"black\" stroke=\"\
    none\" paint-order=\"stroke fill markers\" d=\" M 386.2480643529948 597.1061312926665\
    \ L 399.86073376966146 603.9124660009999 L 386.2480643529948 610.7188007093332\
    \ Z\"/></g></g><g><g><rect fill=\"white\" stroke=\"none\" x=\"195.55152315037762\"\
    \ y=\"628.4152709509998\" width=\"98.60130561890625\" height=\"21.23576429\"/></g><text\
    \ fill=\"black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"11pt\"\
    \ font-style=\"normal\" font-weight=\"normal\" text-decoration=\"normal\" x=\"\
    198.0018036453776\" y=\"643.1169539209998\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">events\_[\_]\_(3.2)</text></g><g><path fill=\"\
    none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 399.86073376966146\
    \ 649.6510352409998 L 103.29293553366666 649.6510352409998\" stroke-miterlimit=\"\
    10\" stroke-width=\"1.3612669416666667\" stroke-dasharray=\"\"/><g transform=\"\
    translate(89.84361815,649.6510352409998) translate(-89.84361815,-649.6510352409998)\"\
    ><path fill=\"black\" stroke=\"none\" paint-order=\"stroke fill markers\" d=\"\
    \ M 103.45628756666666 642.8447005326665 L 89.84361815 649.6510352409998 L 103.45628756666666\
    \ 656.4573699493332 Z\"/></g></g><g><g/><path fill=\"none\" stroke=\"black\" paint-order=\"\
    fill stroke markers\" d=\" M 16.335203300000003 87.72004172099999 L 473.3691486196615\
    \ 87.72004172099999 L 473.3691486196615 674.1538401909999 L 16.335203300000003\
    \ 674.1538401909999 L 16.335203300000003 87.72004172099999 Z\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.3336004714285714\" stroke-dasharray=\"\"/><path fill=\"\
    white\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 16.335203300000003\
    \ 87.72004172099999 L 16.335203300000003 107.32228568099998 L 62.694406897070316\
    \ 107.32228568099998 L 72.49552887707031 97.52116370099999 L 72.49552887707031\
    \ 87.72004172099999 L 16.335203300000003 87.72004172099999\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.3336004714285714\" stroke-dasharray=\"\"/><text fill=\"\
    black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"8.8pt\" font-style=\"\
    normal\" font-weight=\"bold\" text-decoration=\"normal\" x=\"32.67040660000001\"\
    \ y=\"100.78820436099998\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">alt</text><g><rect fill=\"white\" stroke=\"none\" x=\"\
    86.38045168207032\" y=\"89.02685798499998\" width=\"128.75847114625\" height=\"\
    16.988611432000003\"/></g><text fill=\"black\" stroke=\"none\" font-family=\"\
    sans-serif\" font-size=\"8.8pt\" font-style=\"normal\" font-weight=\"bold\" text-decoration=\"\
    normal\" x=\"88.83073217707032\" y=\"100.78820436099998\" text-anchor=\"start\"\
    \ dominant-baseline=\"alphabetic\" xml:space=\"preserve\">[single\_request\_check]</text><g><path\
    \ fill=\"none\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 16.335203300000003\
    \ 476.4978802609999 L 473.3691486196615 476.4978802609999\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.3336004714285714\" stroke-dasharray=\"4.083800825\"/></g><g/><g><rect\
    \ fill=\"white\" stroke=\"none\" x=\"86.38045168207032\" y=\"477.80469652499994\"\
    \ width=\"101.35219062867188\" height=\"16.988611432000003\"/></g><text fill=\"\
    black\" stroke=\"none\" font-family=\"sans-serif\" font-size=\"8.8pt\" font-style=\"\
    normal\" font-weight=\"bold\" text-decoration=\"normal\" x=\"88.83073217707032\"\
    \ y=\"489.56604290099995\" text-anchor=\"start\" dominant-baseline=\"alphabetic\"\
    \ xml:space=\"preserve\">[Stream\_solution]</text></g><g><g/><path fill=\"none\"\
    \ stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 32.6704066 275.57487967099996\
    \ L 457.0339453196615 275.57487967099996 L 457.0339453196615 411.15706706099996\
    \ L 32.6704066 411.15706706099996 L 32.6704066 275.57487967099996 Z\" stroke-miterlimit=\"\
    10\" stroke-width=\"2.3336004714285714\" stroke-dasharray=\"\"/><path fill=\"\
    white\" stroke=\"black\" paint-order=\"fill stroke markers\" d=\" M 32.6704066\
    \ 275.57487967099996 L 32.6704066 295.177123631 L 90.09520773125 295.177123631\
    \ L 99.89632971125 285.37600165099997 L 99.89632971125 275.57487967099996 L 32.6704066\
    \ 275.57487967099996\" stroke-miterlimit=\"10\" stroke-width=\"2.3336004714285714\"\
    \ stroke-dasharray=\"\"/><text fill=\"black\" stroke=\"none\" font-family=\"sans-serif\"\
    \ font-size=\"8.8pt\" font-style=\"normal\" font-weight=\"bold\" text-decoration=\"\
    normal\" x=\"49.005609899999996\" y=\"288.643042311\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">loop</text><g><rect fill=\"white\" stroke=\"\
    none\" x=\"113.78125251625\" y=\"276.881695935\" width=\"45.972719803476565\"\
    \ height=\"16.988611432000003\"/></g><text fill=\"black\" stroke=\"none\" font-family=\"\
    sans-serif\" font-size=\"8.8pt\" font-style=\"normal\" font-weight=\"bold\" text-decoration=\"\
    normal\" x=\"116.23153301125001\" y=\"288.643042311\" text-anchor=\"start\" dominant-baseline=\"\
    alphabetic\" xml:space=\"preserve\">[check]</text></g><g/></g><g/><g/></g></svg>\
    \ </td>\n  \n</tr>\n</table>\n\n\n  ### 4. Monitorare l'avanzamento di una notifica\n\
    \n  Allo stesso modo del monitoraggio dell'accettazione della notifica da parte\
    \ della Piattaforma sono \n  disponibili le due modalit√†.\n  \n  #### 4.1 Monitoraggio\
    \ puntuale\n\n  Se la \"richiesta di invio di notifica\" passa le validazioni\
    \ viene trasformata in \"notifica\" e sar√† \n  identificata dalla IUN restituito\
    \ dall'operazione \n  [getNotificationRequestStatus](#/SenderReadB2B/getNotificationRequestStatus).</br>\
    \ \n  A tal punto si potranno utilizzare l'operazione _GET /delivery/notifications/sent/{iun}_\
    \ per \n  ottenere i dettagli della notifica, la _timeline_ che dettaglia il perfezionamento\
    \ della\n  notifica per il mittente e l'avanzamento delle comunicazioni nei confronti\
    \ dei destinatari.\n  \n  #### 4.1 Monitoraggio tramite stream\n\n  Questa modalit√†\
    \ √® consigliata in produzione. Per essere fruita √® necessaria una operazione preliminare\n\
    \  tramite la chiamata alla API [createEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook-v1.yaml#/Streams/createEventStream)\n\
    \  per configurare uno \"stream\" che registri il cambio di stato della notifica\
    \ con il seguente payload di esempio:</br></br>``\n  {\n    \"title\": \"NotificationAccepted\"\
    ,\n    \"eventType\": \"STATUS\"\n  }\n  ``</br></br>che permette di monitorare\
    \ gli eventi di tipo \"STATO\". Successivamente si pu√≤ ottenere il dettaglio della\
    \ stream appena creata chiamando la \n  API [getEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook-v1.yaml#/Streams/getEventStream),\
    \ mentre si possono ottenere i dati degli eventi richiamando la API [consumeEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook-v1.yaml#/Events/consumeEventStream)\n\
    \n\n  __NOTA__ saranno disponibili i dati di cambiamento di stato occorsi solo\
    \ successivamente alla configurazione\n  dello stream.\n\n  </br>\n\n  ### 5.\
    \ Download dei Legal Facts\n\n  E' possibile scaricare le Attestazioni Opponibili\
    \ a Terzi e gli altri documenti conservati da Piattaforma Notifiche attraverso\
    \ il servizio di [dowload Legal Fact](#/SenderReadB2B/getSentNotificationDocument)\
    \ passando all'interno del path lo <strong>Iun</strong>, il <strong>legalFactType</strong>\
    \ ed il <strong>legalFactId</strong>; si otterr√† nella response un link che permette\
    \ di scaricare il documento richiesto.</br> Per ottenere il <strong>legalFactType</strong>\
    \ ed il <strong>legalFactId</strong> bisogna chiamare il servizio di [lettura\
    \ dettaglio notifica](#/SenderReadB2B/getSentNotification) con lo <code>{Iun}</code>\
    \ della notifica di interesse: all'interno del campo <i>timeline</i> della response\
    \ √® possibile trovare l'elenco degli eventi di quella notifica ed i <strong>legalFactType</strong>\
    \ e <strong>legalFactId</strong> in corrispondenza degli eventi che generano documenti.\n\
    \  \n  </br>\n  \n<details>\n  <summary><strong><big><big><big><big>FAQ</big></big></big></big></strong></summary>\n\
    \n><details>\n  <summary><strong>Cosa devo fare se ricevo</strong> `{\"message\"\
    : \"Unauthorized\"}`<strong>?</strong></summary>\n  <em>Il messaggio indica che\
    \ non sono disponibili le credenziali per utilizzare i servizi di PN. Per intraprendere\
    \ il processo di accreditamento, occorre contattare il personale preposto su [account@pagopa.it](mailto:account@pagopa.it)</em>\n\
    </details></br>\n><details>\n  <summary><strong>Le chiamate ai servizi esposti\
    \ da PN sono sicuri ?</strong></summary>\n  <em>Si. Le chiamate ai servizi esposti\
    \ da PN avvengono in modalit√† https utilizzando API Key. Non sono attualmente\
    \ previsti meccanismi di crittazione/decrittazione dei documenti e/o accessi basati\
    \ su mutua autenticazione tramite certificato.</em>\n</details></br>\n><details>\n\
    \  <summary><strong>Dopo aver fatto l'upload dei documenti della notifica nella\
    \ fase 1, quanto tempo ho per inviare la notifica?</strong></summary>\n  <em>I\
    \ documenti memorizzati su bucket S3  durante la fase di caricamento (1.a e 1.b)\
    \ vengono mantenuti per <span id=\"pnTemporaryDocument\">7 giorni</span>, passati\
    \ i quali vengono eliminati ed andranno ricaricati di nuovo se si vuole inoltrare\
    \ la notifica.</em>\n</details></br>\n><details>\n  <summary><strong>Quali sono\
    \ i passi da seguire per effettuare l‚Äôinoltro manuale della notifica ?</strong></summary>\n\
    \  <em>I passi necessari per eseguire l‚Äôinoltro della notifica sono i seguenti:</em></br>\n\
    \  >> <em><medium><strong>1) </strong>Pre inoltro della documentazione (atto di\
    \ notifica e moduli di pagamento).</br> Occorre chiamare il servizio <strong>presignedUploadRequest.</strong></medium></em></br></br>\n\
    \  <em><medium><strong>2) </strong>Upload della documentazione.</br> PA o PT devono\
    \ sviluppare un software che sia in grado di inviare la documentazione a Piattaforma\
    \ Notifiche. Occorre effettuare, per ogni documento, una richiesta HTTP con metodo\
    \ httpMethod all'url restituita dal servizio<strong>presignedUploadRequest.</strong></medium></em></br></br>\n\
    \  <em><medium><strong>3) </strong>Invio della notifica.</br> Occorre chiamare\
    \ il servizio <strong>sendNewNotification.</strong></medium></em></br></br>\n\
    </details></br>\n><details>\n  <summary><strong>Come avviene l‚Äôinoltro della notifica\
    \ ?</strong></summary>\n  <em>L‚Äôinoltro della notifica pu√≤ avvenire in modalit√†\
    \ automatica o manuale. La modalit√† automatica prevede l‚Äôutilizzo della piattaforma\
    \ PN e consente l‚Äôinoltro puntuale di una notifica. La modalit√† manuale prevede\
    \ l‚Äôutilizzo dei servizi di PN da parte della PA e consente l‚Äôinoltro massivo\
    \ di notifiche.</em>\n</details></br>\n><details>\n  <summary><strong>Quali controlli\
    \ vengono effettuati in seguito all'inserimento della notifica?</strong></summary>\n\
    \  <em>I controlli effettuati da PN sono i seguenti:</em><ul><li><em>verifica\
    \ che le informazioni inserite siano sintatticamente corrette</em></li><li><em>verifica\
    \ che le combinazioni di <strong>creditorTaxId/noticeCode</strong> e <strong>creditorTaxId/alternativeNoticeCode</strong>\
    \ siano univoche</em></li><li><em>verifica che la combinazione dei campi <strong>senderPaId,\
    \ paProtocolNumber, idempotenceToken</strong> siano univoci</em></li></ul>\n</details></br>\n\
    ><details>\n  <summary><strong> Cosa rappresentano i campi requiresAck e sendByMail?\
    \ <font color=\"red\">queste funzioni non sono ancora implementate </font> </strong></summary>\n\
    \  <em>Il campo booleano requiresAck permette di definire il momento esatto nel\
    \ quale scatter√† il perfezionamento per presa visione dell'atto: se falso baster√†\
    \ che il destinatario prenda visione del documento da notificare; se vero, oltre\
    \ alla visualizzazione dovr√† anche scaricare il documento da notificare.</br>\
    \ Il campo boolean sendByMail permette di indicare se il documento avente questo\
    \ parametro sar√† spedito nelle comunicazioni cartacee o meno </em>\n</details></br>\n\
    ><details>\n  <summary><strong>Cos'√® il codice di tassonomia \\(taxonomyCode\\\
    )?</strong></summary>\n  <em>Il codice di tassonomia(taxonomyCode) viene utilizzato\
    \ per definire la tipolgia di atto e pu√≤ essere recuperato nell'allegato 2 capitolo\
    \ C del bando: \n  [__AVVISO PUBBLICO MISURA 1.4.5 PIATTAFORMA NOTIFICHE DIGITALI__](https://pnrrcomuni.fondazioneifel.it/bandi_public/Bando/325)</em>\n\
    </details></br>\n><details>\n  <summary><strong>Come si individua il domicilio\
    \ del destinatario di una notifica in base alla tipologia del destinatario (PF\
    \ e PG) ?</strong></summary>\n  <em>Quando si invia una notifica, occorre indicare\
    \ la tipologia del destinatario:</em>\n    <ul>\n      <li><em>Se il destinatario\
    \ √® PF, l'ordine di individuazione √® il seguente:</em></br>\n        >>>><em><strong>1)\
    \ </strong> Domicilio digitale di piattaforma (se disponibile, quello configurato\
    \ dal destinatario per l'ente mittente della notifica; in alternativa, quello\
    \ configurato dal destinatario per la genericit√† degli enti mittenti)</em></br>\n\
    \        <em><strong>2) </strong> Domicilio digitale speciale indicato dall‚Äôente\
    \ mittente nella creazione della notifica</em></br>\n        <em><strong>3) </strong>\
    \ Domicilio digitale generale fornito dal registro pubblico <strong>INAD</strong></em>\n\
    \      </li>\n      <li><em>se il destinatario √® PG, l'ordine di individuazione\
    \ √® il seguente:</em></br>\n        >>>>>><em><strong>1) </strong> Domicilio digitale\
    \ di piattaforma (se disponibile, quello configurato dal destinatario per l'ente\
    \ mittente della notifica; in alternativa, quello configurato dal destinatario\
    \ per la genericit√† degli enti mittenti)</em></br>\n        <em><strong>2) </strong>\
    \ Domicilio digitale speciale indicato dall‚Äôente mittente nella creazione della\
    \ notifica</em></br>\n        <em><strong>3) </strong> Domicilio digitale generale\
    \ fornito dal registro delle imprese <strong>IniPEC</strong></em>\n      </li>\n\
    \    </ul>\n    </br>\n</details>\n  </br>\n><details>\n  <summary><strong>Quale\
    \ relazione esiste tra eventi di timeline e stati della notifica ?</strong></summary>\n\
    \  <em>Non esiste una corrispondenza 1:1 tra eventi di timeline e cambiamenti\
    \ di stato; in particolare, solo alcuni eventi di timeline implicano un cambiamento\
    \ di stato</em>\n</details></br>\n><details>\n  <summary><strong>Quando eseguendo\
    \ l‚Äôupload del documento si ottiene il seguente errore:</strong></br><font color=\"\
    red\"><strong>\\<Code>SignatureDoesNotMatch\\</Code></strong></font></br><font\
    \ color=\"red\"><strong>\\<Message>The request signature we calculated does not\
    \ match the signature you provided. Check your key and signing method.\\</Message></strong></font></summary>\n\
    \  <em>Esistono varie casistiche che generano l‚Äôerrore descritto; le pi√π frequenti\
    \ sono:</em></br>\n  >>>>>>> <em><medium><strong>1) </strong>In uploadAllegati\
    \ si √® utilizzato uno sha256 diverso da quello utilizzato in presignedUploadRequest.</medium></em></br><em><medium><strong>2)\
    \ </strong>In uploadAllegati √® stato inserito uno sha256 che non corrisponde al\
    \ documento che si desidera effettivamente inviare.</medium></em></br><em><medium><strong>3)\
    \ </strong>Sha256 corretto in presignedUploadRequest e coincidente con quello\
    \ caricato in uploadAllegati, ma secret errato.</medium></em></br>\n</details>\n\
    \  \n><details>\n  <summary><strong>Quando si invoca il servizio di upload di\
    \ un documento, passando x-amz-checksum-sha256 del file, si ottiene il seguente\
    \ errore: </br>`Value for x-amz-checksum-sha256 header is invalid`</br> cosa bisogna\
    \ fare?</strong></summary>\n  <em>Assicurarsi di avere eseguito i seguenti passaggi:</em></br>\n\
    \  >>>><em><strong>a) </strong>Applicare al documento l‚Äôalgoritmo di crittazione,\
    \ ottenendo una rappresentazione di 64 caratteri in formato esadecimale <strong>^[A-Fa-f0-9]{64}$</strong></em></br>\n\
    \  <em><strong>b) </strong>Ottenere la relativa rappresentazione binaria.</em></br>\n\
    \  <em><strong>c) </strong>Applicare la codifica Base64.</em></br></br>\n  Esempio\
    \ di codice:</br></br>\n  `import org.springframework.util.Base64Utils;`</br>`import\
    \ java.io.ByteArrayInputStream;`</br>`import java.io.InputStream;`</br>`import\
    \ java.security.MessageDigest;`</br></br>`MessageDigest digest = MessageDigest.getInstance(\"\
    SHA-256\");`</br>`byte[] encodedhash = digest.digest( StreamUtils.copyToByteArray(\
    \ docInputStream ) );`</br>`String x-amz-checksum-sha256 = Base64Utils.encodeToString(\
    \ hash )`\n</details></br>\n><details>\n  <summary><strong>Come si pu√≤ verificare\
    \ che lo \"x-amz-checksum-sha256\" sia corretto ?</strong></summary>\n  <em>Aprire\
    \ la shell di Git Bash o un terminal SSH ed eseguire il comando:</em></br></br>\n\
    \  `cat <fullPathFile/filename.ext> | openssl dgst -binary -sha256 | openssl base64\
    \ ‚ÄìA`</br></br>\n  <em>Il comando restituisce la codifica base64 della rappresentazione\
    \ binaria di sha256, che pu√≤ essere confrontato con quella generata dal codice.</em>\n\
    </details></br>\n><details>\n  <summary><strong>Come posso simulare l'upload di\
    \ un documento su S3?</strong></summary>\n  <em>Aprire la shell di Git Bash o\
    \ un terminal SSH ed eseguire il comando:</em></br></br>\n  >`curl -X<httpMethod>\
    \ \\`</br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`-H\"Content-type: application/pdf\"\
    \ \\`</br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`-H\"x-amz-checksum-sha256: <checkSum>\"\
    \ \\ `</br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`--upload-file <file>  \\ `</br>\n\
    \  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`-H\"x-amz-meta-secret: <secret>\" \\`</br>\n\
    \  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`<url>\" \\`\n  </br></br>\n  __\\<httpMethod\\\
    >__: √® il metodo http (PUT o POST) indicato nella response della preload, da utilizzare\
    \ per questa chiamata</br>\n  __\\<checksum\\>__: √® il checksum sha256, codificato\
    \ in base 64, del contenuto binario del file da caricare</br>\n  __\\<file\\>__:\
    \ √® il path del file da caricare</br>\n  __\\<secret\\>__: √® il secret ottenuto\
    \ nella response della preload</br>\n  __\\<url\\>__: √® l'url del bucket S3 ottenuto\
    \ nella response della preload, sul quale effettuare l'upload del documento</br>\n\
    </details></br>\n><details>\n  <summary><strong>Quanto tempo ho per scaricare\
    \ le Attestazioni Opponibili a Terzi?</strong></summary>\n  <em>Gli atti opponibili\
    \ ai terzi e i documenti relativi alla notificazione analogica e digitale (forniti\
    \ dall'operatore postale e dal PEC provider) vengono archiviati da PN. Su entrambe\
    \ le tipologie di documento vengono posti legal hold e retention a 10 anni; pertanto\
    \ possono essere scaricati anche successivamente alla loro generazione. </em>\n\
    </details></br>\n><details>\n  <summary><strong>Dopo aver lanciato il servizio\
    \ [sendNewNotification](#/NewNotification/sendNewNotification) ottengo un messaggio\
    \ di errore su: <em>\"Max one recipient\", \"No recipient physical address\",\
    \ \"No recipient payment\", \"Alternative notice code equals to notice code\"\
    </em>.</br>Cosa devo fare?</strong></summary>\n  <em>Contatta il [supporto enti](mailto:pn-supporto-enti@pagopa.it)\
    \ segnalando questa situazione. </em>\n</details></br>\n><details>\n  <summary><strong>Come\
    \ si possono testare pi√π Enti?</strong></summary>\n  <em>In ambiente di collaudo\
    \ COLL si prevede di creare una User per ogni Ente che permette di accedere alla\
    \ piattafora di Back-Office ed una key ad esso associata. Se si sta testando l'integrazione\
    \ per pi√π Enti  bisogner√† richiedere, per ogni Ente, una user ed una key ad essa\
    \ associata, contattando il [supporto enti](mailto:pn-supporto-enti@pagopa.it)</em>\n\
    </details></br>\n><details>\n  <summary><strong>Come si possono testare i Codici\
    \ Fiscali?</strong></summary>\n  <em>E' possible inserire le notifiche utilizzando\
    \ un qualsiasi codice fiscale che rispetti il regex:</br><code>^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$</code></br>mentre\
    \ i Codici Fiscali per testare l'invio all'appIO, utilizzabili SOLO in ambiente\
    \ di collaudo COLL sono i seguenti: <strong>AAAAAA00A00A000C</strong> e <strong>AAAAAA00A00A000D</strong></em>\n\
    </details></br>\n><details>\n  <summary><strong>E' possibile cancellare una notifica?</strong></summary>\n\
    \  <em>Si, √® possibile al momento cancellare una qualsiasi notifica, inserendo\
    \ al suo posto una nuova notifica che abbia il campo <strong>\"cancelledIun\"\
    </strong>  uguale a quello della notifica da cancellare. Se la nuova notifica\
    \ utilizza gli stessi documenti, questi dovranno essere caricati di nuovo.</br>\
    \ La funzione di cancellazione notifica potr√† subire variazioni in futuro.</em>\n\
    </details></br>\n><details>\n  <summary><strong>Come gestisce un Ente le spese\
    \ di notifica verso il destinatario?</strong></summary>\n  <em>L‚ÄôEnte ha la possibilit√†\
    \ di applicare un costo forfettario (FLAT\\_RATE) o di applicare in maniera puntuale\
    \ i costi della notifica in base alla modalit√† di consegna (DELIVERY\\_MODE).</br>\
    \ Nello specifico, quando l‚ÄôEnte effettua una richiesta di notifica tramite <strong>POST\
    \ /delivery/requests</strong> deve obbligatoriamente utilizzare l‚Äôelemento <strong>notificationFeePolicy</strong>\
    \ per indicare la politica di addebitamento dei costi di notifica.\n  </em>\n\
    </details></br>\n><details>\n  <summary><strong>In quale modo l‚ÄôEnte comunica\
    \ a Piattaforma Notifiche (PN) il costo forfettario?</strong></summary>\n  <em>L‚Äô\
    Ente pu√≤ gestire il costo forfettario, considerandolo alla creazione della posizione\
    \ debitoria, poich√© PN non gestisce il costo forfettario di notifica.</br> Il\
    \ costo forfettario si applica solamente nei casi nei quali esista una legge che\
    \ impone all‚ÄôEnte l'utilizzo di costi di notifica diversi da quelli previsti dal\
    \ DPCM Costi di Piattaforma Notifiche, oppure nel caso in cui l'Ente voglia assumersi\
    \ completamente i costi di notifica. </em>\n</details></br>\n><details>\n  <summary><strong>\
    \ Come √® possibile recuperare le informazioni relative alle spese di notifica?</strong></summary>\n\
    \  <em>Si pu√≤ utilizzare il servizio [NotificazionPrice](#/NotificationPrice/getNotificationPrice)\
    \ passando come parametri il <strong>paTaxId</strong> dell'Ente e il <strong>noticeCode</strong>\
    \ dell'atto che si vuole verificare</em>\n</details></br>\n><details>\n  <summary><strong>Se\
    \ l‚ÄôEnte invia una richiesta di notifica in modalit√† FLAT_RATE e chiama il servizio\
    \ GET/delivery/price/{paTaxId}/{noticeCode}, quale sar√† il costo (amount) notificato\
    \ da PN?</strong></summary>\n  <em>Sar√† notificato comunque il costo della notifica\
    \ sostenuto da PagoPA, perch√© tale valore potrebbe essere utilizzato ai fini della\
    \ verifica della fatturazione.</em>\n</details></br>\n><details>\n  <summary><strong>Qual\
    \ √® il costo della notifica per il destinatario in modalit√† DELIVERY_MODE?</strong></summary>\n\
    \    <table \n    background-color=\"red\"\n    border=\"1px solid black\">\n\
    \      <tr><th>Modalit√†</th><th>Tipo di notifica</th><th>Esito Notifica</th><th>Tipo\
    \ di canale analogico</th><th>Spese postali</th><th>Importo fornito all‚ÄôEnte tramite\
    \ il servizio GET delivery/price</th></tr><tr><td>DELIVERY\\_MODE</td><td>Notifica\
    \ digitale</td><td>Destinatario raggiunto sul canale digitale</td><td>N/A</td><td>N/A</td><td>‚Ç¨\
    \ 2.00 (costo base)</td></tr><tr><td>DELIVERY\\_MODE</td><td>Notifica digitale</td><td>Destinatario\
    \ non raggiungibile sul canale digitale</td><td>N/A</td><td>Costo raccomandata\
    \ semplice</td><td>‚Ç¨ 2.00 (costo base) + Costo raccomandata semplice</td></tr><tr><td>DELIVERY\\\
    _MODE</td><td>Notifica analogica</td><td>Destinatario reperibile al primo indirizzo</td><td>Raccomandata\
    \ A/R</td><td>Costo raccomandata A/R</td><td>‚Ç¨ 2.00 (costo base)  + Costo A/R\
    \ (primo indirizzo)</td></tr><tr><td>DELIVERY\\_MODE</td><td>Notifica analogica</td><td>Destinatario\
    \ reperibile al primo indirizzo</td><td>890</td><td>Costo 890</td><td>‚Ç¨ 2.00 (costo\
    \ base)  + Costo 890 (primo indirizzo)</td></tr><tr><td>DELIVERY\\_MODE</td><td>Notifica\
    \ analogica</td><td>Destinatario reperibile al secondo indirizzo</td><td>Raccomandata\
    \ A/R</td><td>Costo raccomandata A/R</td><td>‚Ç¨ 2.00 (costo base)  + Costo A/R\
    \ (primo indirizzo) + Costo A/R (secondo indirizzo)</td></tr><tr><td>DELIVERY\\\
    _MODE</td><td>Notifica analogica</td><td>Destinatario reperibile al secondo indirizzo</td><td>890</td><td>Costo\
    \ 890</td><td>‚Ç¨ 2.00 (costo base)  + Costo 890 (primo indirizzo) + Costo 890 (secondo\
    \ indirizzo)</td></tr>\n    </table>\n</details></br>\n</details></br>\n<details>\n\
    \  <summary><strong><big><big><big><big>AMBIENTI</big></big></big></big></strong></summary>\n\
    <ul>   <li><strong>https://api.pn.pagopa.it:</strong></br>Ambiente di produzione</li>\
    \ <li><strong>https://api.coll.pagopa.it:</strong></br>Ambiente di collaudo</li>\
    \ <li><strong>https://api.svil.pn.pagopa.it:</strong></br>Ambiente di test. Potrebbe\
    \ subire modifiche/integrazioni in futuro, rimanendo comunque non-bloccante e\
    \ rispettando il principio di retro-attivit√†</li> <li><strong>https://api.dev.pn.pagopa.it:</strong></br>Ambiente\
    \ di sviluppo</li> </ul>   </details></br>\n  "
  termsOfService: https://notifichedigitali.pagopa.it/pubbliche-amministrazioni/index.html
  contact:
    email: pn-supporto-enti@pagopa.it
  license:
    name: Licenza di PN
    url: https://notifichedigitali.pagopa.it/pubbliche-amministrazioni/index.html
  version: 1.0.0
  x-api-id: api-external-b2b-pa
  x-summary: "Piattaforma Notifiche: API B2B per le Pubbliche Amministrazioni"
servers:
- url: https://api.pn.pagopa.it
  description: Ambiente di produzione
- url: https://api.coll.pn.pagopa.it
  description: Ambiente di collaudo
- url: https://api.svil.pn.pagopa.it
  description: Ambiente di test
- url: https://api.dev.pn.pagopa.it
  description: Ambiente di sviluppo
security:
- ApiKeyAuth: []
tags:
- name: HealthCheck
  description: Invocazioni per sapere lo stato di Piattaforma Notifiche
- name: NewNotification
  description: Invocazioni per effettuare il pre-caricamento dei documenti della notifica
    e inviare notifiche
- name: SenderReadB2B
  description: Invocazioni utilizzabili dai mittenti per verificare lo stato delle
    richieste  di notifica inviate e delle notifiche accettate.
- name: NotificationPrice
  description: Invocazioni per determinare il costo della notifica per il destinario.
- name: LegalFacts
  description: Invocazioni per effettuare il downalod degli atti opponibili a terzi
- name: PaymentEvents
  description: Invocazioni per comunicare eventi di pagamento dalla PA
paths:
  /status:
    get:
      tags:
      - HealthCheck
      summary: status path
      description: status path per verificare lo stato di Piattaforma Notifiche
      operationId: status
      responses:
        "200":
          description: Ok
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PnStatusResponse'
              example:
                functionalities:
                - NOTIFICATION_CREATE
                - NOTIFICATION_VISUALIZATION
                - NOTIFICATION_WORKFLOW
                openIncidents: []
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PnStatusResponse'
              example:
                functionalities:
                - NOTIFICATION_CREATE
                - NOTIFICATION_VISUALIZATION
                - NOTIFICATION_WORKFLOW
                openIncidents:
                - functionality: NOTIFICATION_CREATE
                  status: KO
                  startDate: 2019-08-24T14:15:22Z
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/attachments/preload:
    post:
      tags:
      - NewNotification
      summary: Richiesta di pre-caricamento dei documenti della notifica
      description: Operazione che richiede a Piattaforma Notifica le informazioni
        e le autorizzazioni necessarie  a precaricare uno o pi√π file da allegare a
        una notifica. <br/>
      operationId: presignedUploadRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreLoadBulkRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreLoadResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/requests:
    get:
      tags:
      - SenderReadB2B
      summary: Verifica accettazione richiesta notifica
      description: Questa operazione serve per verificare se la richiesta di notifica
        √® stata accettata e ottenere lo IUN associato a tale richiesta. <br/> Bisogna
        specificare il parametro _requestId_ oppure la coppia costituita dai parametri  _paProtocolNumber_
        e _idempotenceToken_. <br/>
      operationId: retrieveNotificationRequestStatus
      parameters:
      - name: notificationRequestId
        in: query
        description: identificativo della richiesta di notifica
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: paProtocolNumber
        in: query
        description: "Numero di protocollo associato alla notifica, pu√≤ essere riutilizzato\
          \ per rettifiche."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: idempotenceToken
        in: query
        description: 'token usato per disambiguare "richieste di notificazione" effetuate
          con lo stesso  numero di protocollo. '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewNotificationRequestStatusResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
      - NewNotification
      summary: Richiesta invio notifica
      description: |-
        Operazione utilizzata dalla Pubblica Amministrazione per richiedere l'invio di una notifica.

        La restituzione di uno stato HTTP 202 significa solo che la richiesta √® sintatticamente
        valida, non che la richiesta sia stata validata ed accettata. <br/>
        Per conoscere lo stato di accettazione della richiesta di notifica bisogna utilizzare l'operazione
        _getNotificationRequestStatus_ oppure utilizzare la modalit√† push prevista dai webhook. <br/>
      operationId: sendNewNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNotificationRequest'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewNotificationResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/notifications/sent/{iun}:
    get:
      tags:
      - SenderReadB2B
      summary: "Mittente: lettura dettagli notifica"
      description: Questa operazione permette di leggere tutti i dettagli di una notifica
        accettata. <br/>
      operationId: retrieveSentNotification
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullSentNotification'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/notifications/sent/{iun}/attachments/documents/{docIdx}:
    get:
      tags:
      - SenderReadB2B
      summary: Download documento notificato
      description: Download documento notificato
      operationId: retrieveSentNotificationDocument
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        schema:
          type: string
      - name: docIdx
        in: path
        description: indice del documento nella lista partendo da 0.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAttachmentDownloadMetadataResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/notifications/sent/{iun}/attachments/payment/{recipientIdx}/{attachmentName}:
    get:
      tags:
      - SenderReadB2B
      summary: Download allegato per pagamento
      description: Download allegato per pagamento
      operationId: retrieveSentNotificationAttachment
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        schema:
          type: string
      - name: recipientIdx
        in: path
        description: indice dei destinatario nella lista partendo da 0.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: attachmentName
        in: path
        description: Tipologia del pagamento allegato alla notifica. Valori possibili
          PAGOPA|F24_FLAT|F24_STANDARD
        required: true
        style: simple
        explode: false
        schema:
          pattern: PAGOPA|F24_FLAT|F24_STANDARD
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAttachmentDownloadMetadataResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-push/{iun}/legal-facts/{legalFactType}/{legalFactId}:
    get:
      tags:
      - LegalFacts
      summary: Download atto opponibile a terzi
      description: Permette di scaricare un atto opponibile a terzi
      operationId: retrieveLegalFact
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        schema:
          type: string
      - name: legalFactType
        in: path
        description: Categoria dell'atto opponbile a terzi
        required: true
        schema:
          type: string
#          $ref: '#/components/schemas/LegalFactCategory'
      - name: legalFactId
        in: path
        description: Identificativo dell'atto opponbile a terzi
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactDownloadMetadataResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/price/{paTaxId}/{noticeCode}:
    get:
      tags:
      - NotificationPrice
      summary: Retrieve notification price and effective date
      description: "Used to retrieve the notification price charged and effective\
        \ date          # ONLY EXTERNAL from PagoPa identifiers paTaxId and noticeCode.\
        \                             # ONLY EXTERNAL Called from PA to turn notification\
        \ cost to the receiver during the         # ONLY EXTERNAL pagoPa payment verification\
        \ phase.                                          # ONLY EXTERNAL"
      operationId: retrieveNotificationPrice
      parameters:
      - name: paTaxId
        in: path
        description: Payment PA fiscal code
        required: true
        style: simple
        explode: false
        schema:
          type: string
#          $ref: '#/components/schemas/paTaxId'
        example: "77777777777"
      - name: noticeCode
        in: path
        description: Payment notice number  numero avviso
        required: true
        style: simple
        explode: false
        schema:
          type: string
#          $ref: '#/components/schemas/noticeCode'
        example: "302000100000019421"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPriceResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/events/payment/pagopa:
    post:
      tags:
      - PaymentEvents
      description: Questa API √® a disposizione della Pubblica Amministrazione per
        inviare eventi di chiusura di una o pi√π posizioni debitorie di tipo PagoPA.
        <br/>
      operationId: paymentEventsRequestPagoPa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentEventsRequestPagoPa'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/events/payment/f24:
    post:
      tags:
      - PaymentEvents
      description: Questa API √® a disposizione della Pubblica Amministrazione per
        inviare eventi di chiusura di una o pi√π posizioni debitorie di tipo F24. <br/>
      operationId: paymentEventsRequestF24
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentEventsRequestF24'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    PreLoadBulkRequest:
      maxItems: 15
      minItems: 1
      type: array
      items:
        $ref: '#/components/schemas/PreLoadRequest'
    PnStatusResponse:
      title: Stato attuale di PN
      required:
      - functionalities
      - openIncidents
      type: object
      properties:
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: Bad Request
          format: int32
          example: 400
        title:
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
          description: The server cannot process the request
          example: Bad Request
        detail:
          maxLength: 4096
          pattern: "^.{0,4096}$"
          type: string
          description: The server cannot process the request
          example: Bad Request
        functionalities:
          title: elenco funzionalit√† di PN
          type: array
          description: Un array che comprende tutti i possibili valori dell'enum _PnFunctionality_
          items:
            $ref: '#/components/schemas/PnFunctionality'
        openIncidents:
          title: elenco disservizi correnti
          type: array
          description: Al pi√π uno per funzionalit√†
          items:
            $ref: '#/components/schemas/PnDowntimeEntry'
      description: Elenco delle funzionalit√† della piattaforma ed elenco dei disservizi
        noti e attivi  al momento della richiesta. I disservizi (_openIncidents_)
        segnalati sono al pi√π uno  per funzionalit√†; gli attributi _endDate_ e _legalFactId_
        non saranno valorizzati.
    PreLoadRequest:
      title: Richiesta di precaricamento di un File
      type: object
      properties:
        preloadIdx:
          title: Id della richiesta di precaricamento di un file
          type: string
          description: "Identificativo univoco all'interno della request HTTP, serve\
            \ per correlare la risposta. "
        contentType:
          title: MIME type del file che verr√† caricato
          type: string
          description: |-
            Il MIME type dell'allegato che dovr√† essere caricato. Attualmente √® supportato solo
              - application/pdf
          example: application/pdf
        sha256:
          title: checksum sha256 del file che verr√† caricato
          type: string
          description: "checksum sha256, codificato in base 64, del contenuto binario\
            \ del file che verr√† caricato"
          example: jezIVxlG1M1woCSUngM6KipUN3/p8cG5RMIPnuEanlE=
    PreLoadResponse:
      title: Informazioni per il caricamento file
      type: object
      properties:
        preloadIdx:
          type: string
          description: per correlazione con la richiesta
        secret:
          type: string
          description: Token aggiuntivo per far si che sia necessario intercettare
            anche gli  header e non solo l'URL di upload del contenuto del documento.
          example: AZ23RF12
        httpMethod:
          type: string
          description: Indica se per l'upload del contenuto file bisogna utilizzare
            il metodo PUT o POST
          example: PUT
          enum:
          - POST
          - PUT
        url:
          type: string
          description: URL a cui effettuare l'upload del contenuto del documento.
          example: https://preloadpn.aws.amazon.......
        key:
          type: string
          description: la chiave restituita sar√† globalmente unica e andr√† utilizzata
            nella richiesta  di notifica.
          example: PN_NOTIFICATION_ATTACHMENTS-0001-301W-B9CB-9U72-WIKD
      description: Per ogni richiesta che √® stata fatta viene fornito un presigned
        URL e le  informazioni per usarlo.
    NotificationPriceResponse:
      title: Notification price Response
      type: object
      properties:
        iun:
          $ref: '#/components/schemas/IUN'
        amount:
          type: string
          description: amount in euro cents
          example: "1220"
        effectiveDate:
          type: string
          description: notification effective IT local date
          format: date-time
      description: Notification price and effective date
    NewNotificationResponse:
      title: Identificativi della richiesta di notifica
      required:
      - notificationRequestId
      - paProtocolNumber
      type: object
      properties:
        notificationRequestId:
          type: string
          description: "identificativo univoco di una richiesta di invio notifica,\
            \ non √® lo IUN"
        paProtocolNumber:
          type: string
          description: Identificativo inviato dalla pubblica amministrazione
        idempotenceToken:
          type: string
          description: 'Ripetizione del token usato per disambiguare "richieste di
            notificazione"  effetuate con lo stesso numero di protocollo (campo _paProtocolNumber_). '
      description: Contiene le informazioni per identificare una richiesta di invio
        notifica che non √® ancora stata accettata da Piattaforma notifiche.
    NewNotificationRequestStatusResponse:
      allOf:
      - $ref: '#/components/schemas/NewNotificationRequest'
      - required:
        - notificationRequestId
        - notificationRequestStatus
        type: object
        properties:
          notificationRequestId:
            type: string
            description: "identificativo univoco di una richiesta di invio notifica,\
              \ non √® lo IUN"
          notificationRequestStatus:
            type: string
            description: "- __WAITING__: in attesa di essere valutata - __ACCEPTED__:\
              \ richiesta di notifica accettata, lo IUN √® valorizzato - __REFUSED__:\
              \ richiesta di notifica rifiutata, √® valorizzato il campo _errors_"
          retryAfter:
            type: integer
            description: Numero di secondi da attendere prima di effettuare una nuova
              richiesta per  la stessa entit√†; valorizzato quando lo status √® __WAITING__.
            format: int32
          iun:
            $ref: '#/components/schemas/IUN'
          errors:
            type: array
            description: Elenco degli errori che hanno causato il rifiuto della richiesta
              di notifica
            items:
              $ref: '#/components/schemas/ProblemError'
    Problem:
      type: object
      required:
      - errors
      - status
      properties:
        type:
          type: string
          description: URI reference of type definition
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          format: int32
          example: 503
        title:
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
          description: "A short, summary of the problem type. Written in english and\
            \ readable"
          example: Service Unavailable
        detail:
          maxLength: 4096
          pattern: "^.{0,4096}$"
          type: string
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
        traceId:
          type: string
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
        timestamp:
          type: string
          description: date and time referred to UTC
          format: date-time
          example: 2022-07-27T12:22:33.444Z
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProblemError'
    ProblemError:
      type: object
      required:
      - code
      properties:
        code:
          type: string
          description: "Internal code of the error, in human-readable format"
          example: PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
        element:
          type: string
          description: Parameter or request body field name for validation error
          example: "body.order.item[2].quantity"
        detail:
          maxLength: 1024
          type: string
          description: A human readable explanation specific to this occurrence of
            the problem.
          example: Parameter not valid
    FullSentNotification:
      description: Le informazioni riguardanti una notifica (richiesta di notifica
        accettata) e il  processo di inoltro della notifica verso il cittadino.
      allOf:
      - $ref: '#/components/schemas/SentNotification'
      - required:
        - notificationStatus
        - notificationStatusHistory
        - timeline
        type: object
        properties:
          notificationStatus:
            $ref: '#/components/schemas/NotificationStatus'
          notificationStatusHistory:
            $ref: '#/components/schemas/NotificationStatusHistory'
          timeline:
            type: array
            description: elenco dettagliato di tutto ci√≤ che √® accaduto durrante il
              processo di notifica
            items:
              $ref: '#/components/schemas/TimelineElement'
    PaymentEventsRequestPagoPa:
      title: Invio eventi di pagamento da PA a PN
      required:
      - events
      type: object
      properties:
        events:
          type: array
          description: Elenco degli eventi di pagamento
          items:
            $ref: '#/components/schemas/PaymentEventPagoPa'
      description: Richiesta contenente un array di eventi di pagamento di tipo PagoPA
        di cui una Pubblica Amministrazione deve avvisare Piattaforma Notifiche.
    PaymentEventsRequestF24:
      title: Invio eventi di pagamento da PA a PN
      required:
      - events
      type: object
      properties:
        events:
          type: array
          description: Elenco degli eventi di pagamento
          items:
            $ref: '#/components/schemas/PaymentEventF24'
      description: Richiesta contenente un array di eventi di pagamento di tipo F24
        di cui una Pubblica Amministrazione deve avvisare Piattaforma Notifiche.
    PaymentEventPagoPa:
      title: Evento di pagamento PagoPa
      required:
      - creditorTaxId
      - noticeCode
      - paymentDate
      type: object
      properties:
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        paymentDate:
          type: string
          format: date-time
      description: |-
        Comprende: <br/>
          - _noticeCode_: "codice avviso pagoPA" di pagamento del sistema pagoPA, usato per pagamento online.<br/>
          - _creditorTaxId_: codice fiscale dell'ente a cui fa riferimento il "codice avviso pagoPA". <br/>
          - data e ora del pagamento. <br/>
    PaymentEventF24:
      title: Evento di pagamento F24
      required:
      - iun
      - paymentDate
      - recipientTaxId
      - recipientType
      type: object
      properties:
        iun:
          type: string
        paymentDate:
          type: string
          format: date-time
        recipientTaxId:
          $ref: '#/components/schemas/TaxId'
        recipientType:
          pattern: PF|PG
          type: string
      description: |-
        Comprende: <br/>
          - lo _IUN_ della notifica pagata, <br/>
          - data e ora del pagamento, <br/>
          - il codice fiscale del destinatario pagatore, <br/>
          - e la tipologia del destinatario pagatore (PF / PG). <br/>
    TimelineElement:
      type: object
      properties:
        elementId:
          type: string
          description: "Identificativo dell'elemento di timeline: insieme allo IUN\
            \ della notifica definisce in  maniera univoca l'elemento di timeline"
        timestamp:
          type: string
          description: Momento in cui avviene l'evento descritto in questo elemento
            di timeline
          format: date-time
        legalFactsIds:
          type: array
          description: Chiavi dei documenti che provano l'effettivo accadimento dell'evento
            descritto in timeline. Questo elemento
          items:
            $ref: '#/components/schemas/LegalFactsId'
        category:
          $ref: '#/components/schemas/TimelineElementCategory'
        details:
          $ref: '#/components/schemas/TimelineElementDetails'
      additionalProperties: false
    NotificationStatus:
      type: string
      description: |
        stato di avanzamento del processo di notifica:
          * `IN_VALIDATION` - notifica depositata in attesa di validazione
          * `ACCEPTED` - L'ente ha depositato la notifica con successo
          * `REFUSED` - Notifica rifiutata a seguito della validazione
          * `DELIVERING` - L'invio della notifica √® in corso
          * `DELIVERED` - La notifica √® stata consegnata a tutti i destinatari
          * `VIEWED` - Il destinatario ha letto la notifica entro il termine stabilito
          * `EFFECTIVE_DATE` - Il destinatario non ha letto la notifica entro il termine stabilito
          * `PAID` - Uno dei destinatari ha pagato la notifica
          * `UNREACHABLE` - Il destinatario non √® reperibile
          * `CANCELLED` - L'ente ha annullato l'invio della notifica
      enum:
      - IN_VALIDATION
      - ACCEPTED
      - REFUSED
      - DELIVERING
      - DELIVERED
      - VIEWED
      - EFFECTIVE_DATE
      - PAID
      - UNREACHABLE
      - CANCELLED
    NotificationStatusHistory:
      type: array
      description: elenco degli avanzamenti effettuati dal processo di notifica
      items:
        $ref: '#/components/schemas/NotificationStatusHistoryElement'
    LegalFactDownloadMetadataResponse:
      title: Url e metadati per il download di un allegato di una notifica
      required:
      - contentLength
      - filename
      type: object
      properties:
        filename:
          type: string
        contentLength:
          type: number
          description: "dmensione, in byte, del contenuto."
          format: decimal32
          example: 54092
        url:
          type: string
          description: URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento √® pronto per
            il download.
        retryAfter:
          type: number
          description: Stima del numero di secondi da aspettare prima che il contenuto
            del  documento sia scaricabile.
          format: decimal32
      description: |-
        I due campi pi√π importanti sono __url__ e __retryAfter__. <br/>
          - __url__ √® presente se il file √® pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file non √® stato archiviato e bisogner√† aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
    NewNotificationRequest:
      required:
      - documents
      - notificationFeePolicy
      - paProtocolNumber
      - physicalCommunicationType
      - recipients
      - senderDenomination
      - senderTaxId
      - subject
      type: object
      properties:
        idempotenceToken:
          type: string
          description: Identificativo utilizzabile dal chiamante per disambiguare
            differenti  "richieste di notificazione" effettuate con lo stesso numero
            di protocollo  (campo _paProtocolNumber_). Questo pu√≤ essere necessario
            in caso di  "richiesta di notifica" rifiutata per errori nei codici di
            verifica degli allegati.
        paProtocolNumber:
          type: string
          description: Numero di protocollo che la PA mittente assegna alla notifica
            stessa
        subject:
          maxLength: 512
          type: string
          description: titolo della notifica
        abstract:
          maxLength: 1024
          type: string
          description: descrizione sintetica della notifica
        recipients:
          type: array
          description: Informazioni sui destinatari
          items:
            $ref: '#/components/schemas/NotificationRecipient'
        documents:
          minItems: 1
          type: array
          description: Documenti notificati
          items:
            $ref: '#/components/schemas/NotificationDocument'
        notificationFeePolicy:
          type: string
          description: "Politica di addebitamento dei costi di notifica. <br/> - _FLAT_RATE_:\
            \ costo forfettario fisso. <br/> - _DELIVERY_MODE_: costo calcolato in\
            \ base all'effettivo percorso di notifica. <br/>"
          enum:
          - FLAT_RATE
          - DELIVERY_MODE
        cancelledIun:
          $ref: '#/components/schemas/IUN'
        physicalCommunicationType:
          type: string
          description: Tipologia comunicazione fisica
          enum:
          - AR_REGISTERED_LETTER
          - REGISTERED_LETTER_890
        senderDenomination:
          $ref: '#/components/schemas/Denomination'
        senderTaxId:
          $ref: '#/components/schemas/paTaxId'
        group:
          type: string
          description: Gruppo di utenti dell'ente mittente che pu√≤ visualizzare la
            notifica
        amount:
          type: integer
          description: Importo della notifica in eurocent
          format: int32
        paymentExpirationDate:
          pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$"
          type: string
          description: Data di scadenza del pagamento nel formato YYYY-MM-DD riferito
            all'Italia
        taxonomyCode:
          maxLength: 7
          minLength: 7
          pattern: "^([0-9]{6}[A-Z]{1})$"
          type: string
          description: "Codice tassonomico della notifica basato sulla definizione\
            \ presente nell'allegato 2 capitolo C del bando [__AVVISO PUBBLICO MISURA\
            \ 1.4.5 PIATTAFORMA NOTIFICHE DIGITALI__](https://pnrrcomuni.fondazioneifel.it/bandi_public/Bando/325)\
            \      "
          default: 010101P
      description: I campi utilizzati per la creazione di una nuova Notifica.
    NotificationRecipient:
      required:
      - denomination
      - recipientType
      - taxId
      type: object
      properties:
        recipientType:
          type: string
          description: "Tipologia di destinatario: Persona Fisica (PF) o Persona Giuridica\
            \ (PG)"
          enum:
          - PF
          - PG
        taxId:
          $ref: '#/components/schemas/TaxId'
        internalId:
          type: string
          description: id interno anonimizzato
        denomination:
          $ref: '#/components/schemas/Denomination'
        digitalDomicile:
          $ref: '#/components/schemas/NotificationDigitalAddress'
        physicalAddress:
          $ref: '#/components/schemas/NotificationPhysicalAddress'
        payment:
          $ref: '#/components/schemas/NotificationPaymentInfo'
      description: Informazioni sui destinatari
    TaxId:
      maxLength: 16
      minLength: 11
      pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
      type: string
      description: C.F. persona fisica o persona giuridica (Partita iva)
    Denomination:
      maxLength: 80
      minLength: 1
      pattern: "^([\\x20-\\xFF]{1,80})$"
      type: string
      description: Denominazione ente o persona fisica / ragione sociale
    NotificationDigitalAddress:
      required:
      - address
      - type
      type: object
      properties:
        type:
          type: string
          description: "tipo di indirizzo PEC, REM, SERCQ, ..."
          enum:
          - PEC
        address:
          type: string
          description: Indirizzo PEC o REM che il mittente della notifica intende
            utilizzare per  raggiungere il destinatario.
          example: account@domain
      description: Indirizzo di invio della notifica
    NotificationPhysicalAddress:
      required:
      - address
      - municipality
      - zip
      type: object
      properties:
        at:
          type: string
          description: Campo "presso" dell'indirizzo
        address:
          type: string
          description: Indirizzo del domicilio fisico
        addressDetails:
          type: string
          description: Seconda riga dell'indirizzo fisico
        zip:
          type: string
          description: Codice di avviamento postale
        municipality:
          type: string
          description: Comune
        municipalityDetails:
          type: string
          description: Frazione o localit√†
        province:
          type: string
          description: Provincia
        foreignState:
          type: string
          description: Denominazione paese estero
      description: Indirizzo fisico scoperto durante fase di consegna (obbligatorio
        solo in fase di Sperimentazione)
    NotificationPaymentInfo:
      title: Informazioni per effettuare il pagamento
      required:
      - creditorTaxId
      - noticeCode
      type: object
      properties:
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        noticeCodeAlternative:
          $ref: '#/components/schemas/noticeCode'
        pagoPaForm:
          $ref: '#/components/schemas/NotificationPaymentAttachment'
        f24flatRate:
          $ref: '#/components/schemas/NotificationPaymentAttachment'
        f24standard:
          $ref: '#/components/schemas/NotificationPaymentAttachment'
      description: |-
        Informazioni utili per effettuare il pagamento di una notifica, sono associate al destinatario perch√© le spese di notifica possono differire a seconda del canale di notifica utilizzato. <br/>
          - _notificationFeePolicy_: indica se il pagamento delle spese di notifica √® forfettario o
             calcolato puntualmente. <br/>
          - _noticeCode_: "codice avviso pagoPA" di pagamento del sistema pagoPA, usato per pagamento online.<br/>
          - _creditorTaxId_: codice fiscale dell'ente a cui fa riferimento il "codice avviso pagoPA". <br/>
          - _pagoPaForm_: riferimento al PDF contenete il bollettino pagoPA<br/>
          - _f24flatRate_: riferimento al PDF contenete l'F24 con spese di notifica forfettarie<br/>
          - _f24standard_: riferimento al PDF contenete l'F24 con spese di notifica standard<br/>
    noticeCode:
      maxLength: 18
      minLength: 18
      pattern: ^\d+$
      type: string
      description: Payment notice number  numero avviso
      example: "302000100000019421"
    paTaxId:
      maxLength: 11
      minLength: 11
      pattern: ^\d+$
      type: string
      description: Payment PA fiscal code
      example: "77777777777"
    NotificationPaymentAttachment:
      description: Un modulo di pagamento allegato alla notifica
      allOf:
      - $ref: '#/components/schemas/NotificationAttachment'
    NotificationAttachment:
      required:
      - contentType
      - digests
      - ref
      type: object
      properties:
        digests:
          $ref: '#/components/schemas/NotificationAttachmentDigests'
        contentType:
          type: string
          description: "tipo di contenuto dell'allegato, supportato application/pdf"
        ref:
          $ref: '#/components/schemas/NotificationAttachmentBodyRef'
      description: Un allegato della notifica.
    NotificationAttachmentDigests:
      required:
      - sha256
      type: object
      properties:
        sha256:
          type: string
          description: Digest "sha256" della codifica binaria dell'allegato
      description: Codici per la verifica del corretto caricamento di un allegato
    NotificationAttachmentBodyRef:
      required:
      - key
      - versionToken
      type: object
      properties:
        key:
          type: string
          description: Chiave in cui √® stato salvato l'allegato
        versionToken:
          type: string
          description: Token per recuperare l'esatta istanza dell'allegato
      description: Riferimento all'allegato precaricato
    NotificationDocument:
      description: Un documento da notifcare
      allOf:
      - $ref: '#/components/schemas/NotificationAttachment'
      - type: object
        properties:
          title:
            type: string
            description: Titolo del documento allegato
          requiresAck:
            type: boolean
            description: Se presente e valorizzato __true__ il download del documento  diventa
              necessario al fine del perfezionamento per presa visione.
          sendByMail:
            type: boolean
            description: Se presente e valorizzato __true__ il documento verr√† spedito  nelle
              comunicazioni cartacee. In MVP questo flag sar√† attivabile  solo su
              un documento.
          docIdx:
            type: string
            description: Indice del documento partendo da 0.
    IUN:
      maxLength: 25
      minLength: 25
      pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
      type: string
      description: Identificativo Univoco Notifica
    NotificationAttachmentDownloadMetadataResponse:
      title: Url e metadati per il download di un allegato di una notifica
      required:
      - contentLength
      - contentType
      - filename
      - sha256
      type: object
      properties:
        filename:
          type: string
        contentType:
          type: string
          example: application/pdf
        contentLength:
          type: integer
          description: "dmensione, in byte, del contenuto."
          format: int32
          example: 54092
        sha256:
          type: string
          description: SHA256 del contenuto del file.
        url:
          type: string
          description: URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento √® pronto per
            il download.
        retryAfter:
          type: integer
          description: Stima del numero di secondi da aspettare prima che il contenuto
            del  documento sia disponibile per il download.
          format: int32
      description: |-
        I due campi pi√π importanti sono __url__ e __retryAfter__. <br/>
          - __url__ √® presente se il file √® pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file √® stato archiviato e bisogner√† aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
    SentNotification:
      description: Le informazioni riguardanti una richiesta di notifica accettata
      allOf:
      - $ref: '#/components/schemas/NewNotificationRequest'
      - required:
        - iun
        - sentAt
        type: object
        properties:
          senderPaId:
            type: string
            description: Identificativo IPA della PA mittente che ha eseguito l'onborading
              su SelfCare.
          iun:
            $ref: '#/components/schemas/IUN'
          sentAt:
            type: string
            description: Momento di ricezione della notifica da parte di PN
            format: date-time
          cancelledByIun:
            $ref: '#/components/schemas/IUN'
          documentsAvailable:
            type: boolean
            description: Indica se i documenti notificati sono ancora disponibili.
    PnFunctionality:
      title: Funzionalit√† di PN
      type: string
      description: "- __NOTIFICATION_CREATE__: la possibilit√† di creare nuove notifiche.\n\
        - __NOTIFICATION_VISUALIZATION__: la possibilit√† di visualizzare le notifiche\
        \ e scaricare gli atti. \n- __NOTIFICATION_WORKFLOW__: l'avanzamento del processo\
        \ di notifica. "
      enum:
      - NOTIFICATION_CREATE
      - NOTIFICATION_VISUALIZATION
      - NOTIFICATION_WORKFLOW
      x-enum-varnames:
      - NOTIFICATION_CREATE
      - NOTIFICATION_VISUALIZATION
      - NOTIFICATION_WORKFLOW
    PnDowntimeEntry:
      title: Dati relativi ad un disservizio di PN.
      required:
      - functionality
      - startDate
      - status
      type: object
      properties:
        functionality:
          $ref: '#/components/schemas/PnFunctionality'
        status:
          $ref: '#/components/schemas/PnFunctionalityStatus'
        startDate:
          title: data inizio disservizio
          type: string
          format: date-time
        endDate:
          title: data fine disservizio
          type: string
          description: se il disservizio √® ancora attivo questo campo sar√† assente
            o con valore _null_
          format: date-time
        legalFactId:
          title: id dell'atto opponibile a terzi
          type: string
          description: Se assente o valorizzato _null_ indica che l'atto opponibile
            a terzi non √® ancora disponibile. Questo avviene per i disservizi ancora
            aperti e per i disservizi  terminati da pochi minuti. <br/> Questo valore
            √® da utilizzare con l'API _getLegalFact_ di questo stesso servizio.
        fileAvailable:
          type: boolean
    PnFunctionalityStatus:
      type: string
      enum:
      - KO
      - OK
    TimelineElementCategory:
      type: string
      description: |
        stato di avanzamento del processo di notifica:`
          * `REQUEST_ACCEPTED` - Richiesta di notifica accettata a seguito dei controlli di validazione
          * `REQUEST_REFUSED` - Richiesta di notifica rifiutata per fallimento di validazione
          * `SEND_COURTESY_MESSAGE` - Invio di un messaggio di cortesia
          * `GET_ADDRESS` - Informazioni sulla disponibilit√† dello specifico indirizzo
          * `PUBLIC_REGISTRY_CALL` - Effettuata la richiesta ai registri pubblici per ottenere l'indirizzo generale
          * `PUBLIC_REGISTRY_RESPONSE` - Ricevuta la risposta dei registri pubblici alla richiesta di ottenimento dell'indirizzo generale
          * `SCHEDULE_ANALOG_WORKFLOW` - Inizio del workflow per invio cartaceo
          * `SCHEDULE_DIGITAL_WORKFLOW` - Inizio del workflow per invio digitale (PEC)
          * `SEND_DIGITAL_DOMICILE` - Invio digitale dell‚Äôavviso di notifica
          * `SEND_DIGITAL_PROGRESS` - Ottenuto evento non finale da un invio digitale
          * `SEND_DIGITAL_FEEDBACK` - Ottenuto esito ad un invio digitale
          * `SCHEDULE_REFINEMENT` - Pianificato il perfezionamento per decorrenza termini
          * `REFINEMENT` - Perfezionamento per decorrenza termini
          * `DIGITAL_SUCCESS_WORKFLOW` - Completato con successo il workflow di invio digitale
          * `DIGITAL_FAILURE_WORKFLOW` - Completato con fallimento il workflow di invio digitale
          * `ANALOG_SUCCESS_WORKFLOW` - Completato con successo il workflow di invio cartaceo
          * `ANALOG_FAILURE_WORKFLOW` - Completato con fallimento il workflow di invio cartaceo
          * `PREPARE_SIMPLE_REGISTERED_LETTER` - Preparazione all'invio di raccomandata semplice
          * `SEND_SIMPLE_REGISTERED_LETTER` - Invio di raccomandata semplice
          * `NOTIFICATION_VIEWED` - Perfezionamento per presa visione
          * `PREPARE_ANALOG_DOMICILE` - Preparazione all'invio cartaceo dell‚Äôavviso di notifica
          * `SEND_ANALOG_DOMICILE` - Invio cartaceo dell‚Äôavviso di notifica
          * `SEND_ANALOG_PROGRESS` - Ricezione evento non finale dell'invio cartaceo
          * `SEND_ANALOG_FEEDBACK` - Ricezione esito dell'invio cartaceo
          * `COMPLETELY_UNREACHABLE` - Tutti i destinatari risultano irraggiungibili
          * `AAR_GENERATION` - Generazione dell‚ÄôAAR (Avviso di Avvenuta Ricezione)
          * `PAYMENT` - Ricezione pagamento della notifica
          * `NOT_HANDLED` - Per la sperimentazione l'invio analogico non √® previsto, viene inserito tale elemento di timeline
      enum:
      - REQUEST_ACCEPTED
      - SEND_COURTESY_MESSAGE
      - GET_ADDRESS
      - PUBLIC_REGISTRY_CALL
      - PUBLIC_REGISTRY_RESPONSE
      - SCHEDULE_ANALOG_WORKFLOW
      - SCHEDULE_DIGITAL_WORKFLOW
      - SEND_DIGITAL_DOMICILE
      - SEND_DIGITAL_PROGRESS
      - SEND_DIGITAL_FEEDBACK
      - REFINEMENT
      - SCHEDULE_REFINEMENT
      - DIGITAL_SUCCESS_WORKFLOW
      - DIGITAL_FAILURE_WORKFLOW
      - ANALOG_SUCCESS_WORKFLOW
      - ANALOG_FAILURE_WORKFLOW
      - PREPARE_SIMPLE_REGISTERED_LETTER
      - SEND_SIMPLE_REGISTERED_LETTER
      - NOTIFICATION_VIEWED
      - PREPARE_ANALOG_DOMICILE
      - SEND_ANALOG_DOMICILE
      - SEND_ANALOG_PROGRESS
      - SEND_ANALOG_FEEDBACK
      - PAYMENT
      - COMPLETELY_UNREACHABLE
      - REQUEST_REFUSED
      - AAR_GENERATION
      - NOT_HANDLED
    TimelineElementDetails:
      description: The raw event payload that will be different based on the event.
      oneOf:
      - $ref: '#/components/schemas/NotificationRequestAcceptedDetails'
      - $ref: '#/components/schemas/AnalogFailureWorkflowDetails'
      - $ref: '#/components/schemas/AnalogSuccessWorkflowDetails'
      - $ref: '#/components/schemas/CompletelyUnreachableDetails'
      - $ref: '#/components/schemas/DigitalFailureWorkflowDetails'
      - $ref: '#/components/schemas/DigitalSuccessWorkflowDetails'
      - $ref: '#/components/schemas/GetAddressInfoDetails'
      - $ref: '#/components/schemas/NotificationViewedDetails'
      - $ref: '#/components/schemas/PublicRegistryCallDetails'
      - $ref: '#/components/schemas/PublicRegistryResponseDetails'
      - $ref: '#/components/schemas/RefinementDetails'
      - $ref: '#/components/schemas/RequestRefusedDetails'
      - $ref: '#/components/schemas/ScheduleAnalogWorkflowDetails'
      - $ref: '#/components/schemas/ScheduleDigitalWorkflowDetails'
      - $ref: '#/components/schemas/ScheduleRefinementDetails'
      - $ref: '#/components/schemas/SendCourtesyMessageDetails'
      - $ref: '#/components/schemas/SendDigitalDetails'
      - $ref: '#/components/schemas/SendDigitalFeedbackDetails'
      - $ref: '#/components/schemas/SendDigitalProgressDetails'
      - $ref: '#/components/schemas/SendAnalogDetails'
      - $ref: '#/components/schemas/SendAnalogFeedbackDetails'
      - $ref: '#/components/schemas/SimpleRegisteredLetterDetails'
      - $ref: '#/components/schemas/AarGenerationDetails'
      - $ref: '#/components/schemas/NotHandledDetails'
      - $ref: '#/components/schemas/NotificationPaidDetails'
    NotificationRequestAcceptedDetails:
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    AnalogFailureWorkflowDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    AnalogSuccessWorkflowDetails:
      required:
      - physicalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
    CompletelyUnreachableDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    DigitalFailureWorkflowDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    DigitalSuccessWorkflowDetails:
      required:
      - digitalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
    GetAddressInfoDetails:
      required:
      - attemptDate
      - digitalAddressSource
      - isAvailable
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        isAvailable:
          type: boolean
          description: Disponibilit√† indirizzo
        attemptDate:
          type: string
          description: Data tentativo
          format: date-time
    DigitalAddressSource:
      type: string
      description: sorgente indirizzo di invio della notifica
      enum:
      - PLATFORM
      - SPECIAL
      - GENERAL
    NotificationViewedDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        notificationCost:
          type: integer
          description: "costo notifica in euro cents, pu√≤ essere nullo se la notifica\
            \ si √® perfezionata prima per decorrenza termini"
          format: int64
          example: 1220
        raddType:
          $ref: '#/components/schemas/RaddType'
        raddTransactionId:
          $ref: '#/components/schemas/RaddTransactionId'
        delegateInfo:
          $ref: '#/components/schemas/DelegateInfo'
    RaddType:
      type: string
      description: |
        tipo di Rete Anti Digital Divide <br/>
        __FSU__: Fornitore Servizio Universale <br/>
    RaddTransactionId:
      type: string
      description: Identificativo della pratica all'interno della rete RADD
    DelegateInfo:
      type: object
      properties:
        internalId:
          type: string
        taxId:
          type: string
        operatorUuid:
          type: string
        mandateId:
          type: string
        denomination:
          type: string
        delegateType:
          $ref: '#/components/schemas/RecipientType'
    PublicRegistryCallDetails:
      required:
      - contactPhase
      - deliveryMode
      - recIndex
      - sendDate
      - sentAttemptMade
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        deliveryMode:
          $ref: '#/components/schemas/DeliveryMode'
        contactPhase:
          $ref: '#/components/schemas/ContactPhase'
        sentAttemptMade:
          type: integer
          description: Numero di tentativi di notificazione gi√† effettuati
          format: int32
        sendDate:
          type: string
          description: Data invio richiesta ai public registry
          format: date-time
    DeliveryMode:
      type: string
      description: Tipologia Domiciliazione
      enum:
      - DIGITAL
      - ANALOG
    ContactPhase:
      type: string
      description: Fase in cui √® avvenuta la richiesta
      enum:
      - CHOOSE_DELIVERY
      - SEND_ATTEMPT
    PublicRegistryResponseDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
    RefinementDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        notificationCost:
          type: integer
          description: "costo notifica in euro cents, pu√≤ essere nullo se la notifica\
            \ si √® perfezionata prima per visualizzazione"
          format: int64
          example: 1220
    RequestRefusedDetails:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          description: Motivazioni che hanno portato al rifiuto della notifica
          items:
            type: string
            description: Motivazioni che hanno portato al rifiuto della notifica
    ScheduleAnalogWorkflowDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    ScheduleDigitalWorkflowDetails:
      required:
      - digitalAddress
      - digitalAddressSource
      - lastAttemptDate
      - recIndex
      - sentAttemptMade
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        sentAttemptMade:
          type: integer
          format: int32
        lastAttemptDate:
          type: string
          format: date-time
    ScheduleRefinementDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    SendCourtesyMessageDetails:
      required:
      - digitalAddress
      - recIndex
      - sendDate
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        sendDate:
          type: string
          description: data invio messaggio di cortesia
          format: date-time
    SendDigitalDetails:
      required:
      - digitalAddress
      - digitalAddressSource
      - recIndex
      - retryNumber
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        retryNumber:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
    SendDigitalFeedbackDetails:
      required:
      - digitalAddress
      - notificationDate
      - recIndex
      - responseStatus
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        responseStatus:
          $ref: '#/components/schemas/ResponseStatus'
        notificationDate:
          type: string
          description: data notifica
          format: date-time
        errors:
          type: array
          description: "Lista errori, vuota in caso di successo"
          items:
            type: string
            description: "Lista errori, vuota in caso di successo"
        sendingReceipts:
          type: array
          items:
            $ref: '#/components/schemas/SendingReceipt'
    ResponseStatus:
      type: string
      description: stato risposta ricevuta da externalChannel
      enum:
      - OK
      - KO
    SendingReceipt:
      type: object
      properties:
        id:
          type: string
        system:
          type: string
    SendDigitalProgressDetails:
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        eventCode:
          type: string
          description: esito tornate da ext-channel
        shouldRetry:
          type: boolean
          description: indica se il progress ha dato luogo ad un ritentativo
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        notificationDate:
          type: string
          description: data notifica
          format: date-time
        sendingReceipts:
          type: array
          items:
            $ref: '#/components/schemas/SendingReceipt'
        retryNumber:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
    SendAnalogDetails:
      required:
      - physicalAddress
      - recIndex
      - sentAttemptMade
      - serviceLevel
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        sentAttemptMade:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
        relatedRequestId:
          type: string
          description: Id relativo alla eventuale precedente richiesta di invio cartaceo
        productType:
          type: string
          description: Tipo di invio cartaceo effettivamente inviato
        analogCost:
          type: integer
          description: costo in eurocent dell'invio
          format: int32
    ServiceLevel:
      type: string
      description: Livello Servizio
      enum:
      - AR_REGISTERED_LETTER
      - REGISTERED_LETTER_890
    SendAnalogFeedbackDetails:
      required:
      - investigation
      - physicalAddress
      - recIndex
      - sentAttemptMade
      - serviceLevel
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        sentAttemptMade:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
        investigation:
          type: boolean
          description: E' richiesta investigazione indirizzo fisico alternativo
        newAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        errors:
          type: array
          description: "Lista errori, vuota in caso di successo"
          items:
            type: string
            description: "Lista errori, vuota in caso di successo"
    SimpleRegisteredLetterDetails:
      required:
      - physicalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        productType:
          type: string
          description: Tipo di invio cartaceo effettivamente inviato
        analogCost:
          type: integer
          description: costo in eurocent dell'invio
          format: int32
    AarGenerationDetails:
      required:
      - generatedAarUrl
      - numberOfPages
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        generatedAarUrl:
          type: string
          description: Chiave per recupero da safe-storage del documento aar
        numberOfPages:
          type: integer
          description: numero di pagine del PDF generato
          format: int32
    NotHandledDetails:
      required:
      - reason
      - reasonCode
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        reasonCode:
          type: string
          description: Codice motivazione casistica non gestita
        reason:
          type: string
          description: Motivazione casistica non gestita
    NotificationPaidDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario che ha effettuato il pagamento della notifica
          format: int32
    NotificationStatusHistoryElement:
      required:
      - activeFrom
      - relatedTimelineElements
      - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/NotificationStatus'
        activeFrom:
          type: string
          description: data e ora di raggiungimento dello stato di avanzamento
          format: date-time
        relatedTimelineElements:
          type: array
          description: Eventi avvenuti nello stato
          items:
            $ref: '#/components/schemas/TimelineElementId'
      description: elenco degli avanzamenti effettuati dal processo di notifica
    LegalFactsId:
      required:
      - category
      - key
      type: object
      properties:
        key:
          type: string
          description: Chiave dell'atto opponibile a terzi generato durante il processo
            di consegna
        category:
          $ref: '#/components/schemas/LegalFactCategory'
      description: Chiavi dei documenti generati durante il processo di consegna cartacea
    LegalFactCategory:
      title: Tipi di atti opponibili a terzi
      type: string
      description: |-
        Tipi di atti opponibili a terzi che Piattaforam Notiiche mette a disposizione dei suoi utenti.
          - _SENDER_ACK_: atto di "presa in carico" di una notifica
          - _DIGITAL_DELIVERY_: ...
      enum:
      - SENDER_ACK
      - DIGITAL_DELIVERY
      - ANALOG_DELIVERY
      - RECIPIENT_ACCESS
      - PEC_RECEIPT
    PhysicalAddress:
      required:
      - address
      - municipality
      - zip
      type: object
      properties:
        at:
          type: string
          description: Campo "presso" dell'indirizzo
        address:
          type: string
          description: Indirizzo del domicilio fisico
        addressDetails:
          type: string
          description: Seconda riga dell'indirizzo fisico
        zip:
          type: string
          description: Codice di avviamento postale
        municipality:
          type: string
          description: Comune in cui l'indirizzo si trova
        municipalityDetails:
          type: string
          description: Frazione o localit√†
        province:
          type: string
          description: Provincia in cui si trova l'indirizzo
        foreignState:
          type: string
          description: Denominazione paese estero
      description: Indirizzo fisico scoperto durante fase di consegna
    DigitalAddress:
      required:
      - address
      - type
      type: object
      properties:
        type:
          type: string
          description: "tipo di indirizzo PEC, REM, SERCQ, ..."
        address:
          type: string
          description: account@domain
      description: Indirizzo di invio della notifica
    RecipientType:
      type: string
      enum:
      - PF
      - PG
    TimelineElementId:
      type: string
  parameters:
    notificationRequestId:
      name: notificationRequestId
      in: query
      description: identificativo della richiesta di notifica
      required: false
      style: form
      explode: true
      schema:
        type: string
    paProtocolNumber:
      name: paProtocolNumber
      in: query
      description: "Numero di protocollo associato alla notifica, pu√≤ essere riutilizzato\
        \ per rettifiche."
      required: false
      style: form
      explode: true
      schema:
        type: string
    idempotenceToken:
      name: idempotenceToken
      in: query
      description: 'token usato per disambiguare "richieste di notificazione" effetuate
        con lo stesso  numero di protocollo. '
      required: false
      style: form
      explode: true
      schema:
        type: string
    pathDocumentIdx:
      name: docIdx
      in: path
      description: indice del documento nella lista partendo da 0.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
    pathRecipientIdx:
      name: recipientIdx
      in: path
      description: indice dei destinatario nella lista partendo da 0.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
    pathAttachmentName:
      name: attachmentName
      in: path
      description: Tipologia del pagamento allegato alla notifica. Valori possibili
        PAGOPA|F24_FLAT|F24_STANDARD
      required: true
      style: simple
      explode: false
      schema:
        pattern: PAGOPA|F24_FLAT|F24_STANDARD
        type: string
    pathLegalFactType:
      name: legalFactType
      in: path
      description: Categoria dell'atto opponbile a terzi
      required: true
      schema:
        $ref: '#/components/schemas/LegalFactCategory'
    pathLegalFactId:
      name: legalFactId
      in: path
      description: Identificativo dell'atto opponbile a terzi
      required: true
      schema:
        type: string
    pathIun:
      name: iun
      in: path
      description: Identificativo Univoco Notifica
      required: true
      schema:
        type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
